// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: umbp_config.proto

#include "umbp_config.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_umbp_5fconfig_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_umbp_5fconfig_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_CarConfig;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_umbp_5fconfig_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_CubeConfig;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_umbp_5fconfig_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_EfficiencyCost;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_umbp_5fconfig_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_FpbConfig;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_umbp_5fconfig_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_HdiCost;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_umbp_5fconfig_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_MapConfig;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_umbp_5fconfig_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_NavigationCost;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_umbp_5fconfig_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_SafetyCost;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_umbp_5fconfig_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_SampleConfig;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_umbp_5fconfig_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_UserCost;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_umbp_5fconfig_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_WeightConfig;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_umbp_5fconfig_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_BezierConfig;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_umbp_5fconfig_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_EgoConfig;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_umbp_5fconfig_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_PropogateConfig;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_umbp_5fconfig_2eproto ::google::protobuf::internal::SCCInfo<5> scc_info_CostConfig;
}  // namespace protobuf_umbp_5fconfig_2eproto
namespace planning {
namespace umbp {
class EfficiencyCostDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<EfficiencyCost>
      _instance;
} _EfficiencyCost_default_instance_;
class SafetyCostDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SafetyCost>
      _instance;
} _SafetyCost_default_instance_;
class UserCostDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UserCost>
      _instance;
} _UserCost_default_instance_;
class NavigationCostDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<NavigationCost>
      _instance;
} _NavigationCost_default_instance_;
class HdiCostDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<HdiCost>
      _instance;
} _HdiCost_default_instance_;
class FpbConfigDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<FpbConfig>
      _instance;
} _FpbConfig_default_instance_;
class SampleConfigDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SampleConfig>
      _instance;
} _SampleConfig_default_instance_;
class PropogateConfigDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PropogateConfig>
      _instance;
} _PropogateConfig_default_instance_;
class CostConfigDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CostConfig>
      _instance;
} _CostConfig_default_instance_;
class EgoConfigDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<EgoConfig>
      _instance;
} _EgoConfig_default_instance_;
class BezierConfigDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<BezierConfig>
      _instance;
} _BezierConfig_default_instance_;
class WeightConfigDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<WeightConfig>
      _instance;
} _WeightConfig_default_instance_;
class CubeConfigDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CubeConfig>
      _instance;
} _CubeConfig_default_instance_;
class CarConfigDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CarConfig>
      _instance;
} _CarConfig_default_instance_;
class MapConfigDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MapConfig>
      _instance;
} _MapConfig_default_instance_;
class ConfigDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Config>
      _instance;
} _Config_default_instance_;
}  // namespace umbp
}  // namespace planning
namespace protobuf_umbp_5fconfig_2eproto {
static void InitDefaultsEfficiencyCost() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::planning::umbp::_EfficiencyCost_default_instance_;
    new (ptr) ::planning::umbp::EfficiencyCost();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::planning::umbp::EfficiencyCost::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_EfficiencyCost =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsEfficiencyCost}, {}};

static void InitDefaultsSafetyCost() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::planning::umbp::_SafetyCost_default_instance_;
    new (ptr) ::planning::umbp::SafetyCost();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::planning::umbp::SafetyCost::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_SafetyCost =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsSafetyCost}, {}};

static void InitDefaultsUserCost() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::planning::umbp::_UserCost_default_instance_;
    new (ptr) ::planning::umbp::UserCost();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::planning::umbp::UserCost::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_UserCost =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsUserCost}, {}};

static void InitDefaultsNavigationCost() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::planning::umbp::_NavigationCost_default_instance_;
    new (ptr) ::planning::umbp::NavigationCost();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::planning::umbp::NavigationCost::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_NavigationCost =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsNavigationCost}, {}};

static void InitDefaultsHdiCost() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::planning::umbp::_HdiCost_default_instance_;
    new (ptr) ::planning::umbp::HdiCost();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::planning::umbp::HdiCost::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_HdiCost =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsHdiCost}, {}};

static void InitDefaultsFpbConfig() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::planning::umbp::_FpbConfig_default_instance_;
    new (ptr) ::planning::umbp::FpbConfig();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::planning::umbp::FpbConfig::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_FpbConfig =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsFpbConfig}, {}};

static void InitDefaultsSampleConfig() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::planning::umbp::_SampleConfig_default_instance_;
    new (ptr) ::planning::umbp::SampleConfig();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::planning::umbp::SampleConfig::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_SampleConfig =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsSampleConfig}, {}};

static void InitDefaultsPropogateConfig() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::planning::umbp::_PropogateConfig_default_instance_;
    new (ptr) ::planning::umbp::PropogateConfig();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::planning::umbp::PropogateConfig::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_PropogateConfig =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsPropogateConfig}, {
      &protobuf_umbp_5fconfig_2eproto::scc_info_FpbConfig.base,
      &protobuf_umbp_5fconfig_2eproto::scc_info_SampleConfig.base,}};

static void InitDefaultsCostConfig() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::planning::umbp::_CostConfig_default_instance_;
    new (ptr) ::planning::umbp::CostConfig();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::planning::umbp::CostConfig::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<5> scc_info_CostConfig =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 5, InitDefaultsCostConfig}, {
      &protobuf_umbp_5fconfig_2eproto::scc_info_EfficiencyCost.base,
      &protobuf_umbp_5fconfig_2eproto::scc_info_SafetyCost.base,
      &protobuf_umbp_5fconfig_2eproto::scc_info_UserCost.base,
      &protobuf_umbp_5fconfig_2eproto::scc_info_NavigationCost.base,
      &protobuf_umbp_5fconfig_2eproto::scc_info_HdiCost.base,}};

static void InitDefaultsEgoConfig() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::planning::umbp::_EgoConfig_default_instance_;
    new (ptr) ::planning::umbp::EgoConfig();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::planning::umbp::EgoConfig::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_EgoConfig =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsEgoConfig}, {
      &protobuf_umbp_5fconfig_2eproto::scc_info_CarConfig.base,
      &protobuf_umbp_5fconfig_2eproto::scc_info_MapConfig.base,}};

static void InitDefaultsBezierConfig() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::planning::umbp::_BezierConfig_default_instance_;
    new (ptr) ::planning::umbp::BezierConfig();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::planning::umbp::BezierConfig::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_BezierConfig =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsBezierConfig}, {
      &protobuf_umbp_5fconfig_2eproto::scc_info_WeightConfig.base,
      &protobuf_umbp_5fconfig_2eproto::scc_info_CubeConfig.base,}};

static void InitDefaultsWeightConfig() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::planning::umbp::_WeightConfig_default_instance_;
    new (ptr) ::planning::umbp::WeightConfig();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::planning::umbp::WeightConfig::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_WeightConfig =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsWeightConfig}, {}};

static void InitDefaultsCubeConfig() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::planning::umbp::_CubeConfig_default_instance_;
    new (ptr) ::planning::umbp::CubeConfig();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::planning::umbp::CubeConfig::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CubeConfig =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCubeConfig}, {}};

static void InitDefaultsCarConfig() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::planning::umbp::_CarConfig_default_instance_;
    new (ptr) ::planning::umbp::CarConfig();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::planning::umbp::CarConfig::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CarConfig =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCarConfig}, {}};

static void InitDefaultsMapConfig() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::planning::umbp::_MapConfig_default_instance_;
    new (ptr) ::planning::umbp::MapConfig();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::planning::umbp::MapConfig::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_MapConfig =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsMapConfig}, {}};

static void InitDefaultsConfig() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::planning::umbp::_Config_default_instance_;
    new (ptr) ::planning::umbp::Config();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::planning::umbp::Config::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<4> scc_info_Config =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 4, InitDefaultsConfig}, {
      &protobuf_umbp_5fconfig_2eproto::scc_info_CostConfig.base,
      &protobuf_umbp_5fconfig_2eproto::scc_info_PropogateConfig.base,
      &protobuf_umbp_5fconfig_2eproto::scc_info_EgoConfig.base,
      &protobuf_umbp_5fconfig_2eproto::scc_info_BezierConfig.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_EfficiencyCost.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SafetyCost.base);
  ::google::protobuf::internal::InitSCC(&scc_info_UserCost.base);
  ::google::protobuf::internal::InitSCC(&scc_info_NavigationCost.base);
  ::google::protobuf::internal::InitSCC(&scc_info_HdiCost.base);
  ::google::protobuf::internal::InitSCC(&scc_info_FpbConfig.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SampleConfig.base);
  ::google::protobuf::internal::InitSCC(&scc_info_PropogateConfig.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CostConfig.base);
  ::google::protobuf::internal::InitSCC(&scc_info_EgoConfig.base);
  ::google::protobuf::internal::InitSCC(&scc_info_BezierConfig.base);
  ::google::protobuf::internal::InitSCC(&scc_info_WeightConfig.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CubeConfig.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CarConfig.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MapConfig.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Config.base);
}

::google::protobuf::Metadata file_level_metadata[16];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::planning::umbp::EfficiencyCost, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::planning::umbp::EfficiencyCost, ego_lack_speed_to_desired_unit_cost_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::planning::umbp::EfficiencyCost, ego_over_speed_to_desired_unit_cost_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::planning::umbp::EfficiencyCost, ego_desired_speed_tolerate_gap_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::planning::umbp::EfficiencyCost, leading_distance_th_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::planning::umbp::EfficiencyCost, min_distance_ratio_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::planning::umbp::EfficiencyCost, ego_speed_blocked_by_leading_unit_cost_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::planning::umbp::EfficiencyCost, leading_speed_blocked_desired_vel_unit_cost_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::planning::umbp::SafetyCost, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::planning::umbp::SafetyCost, ego_to_obs_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::planning::umbp::UserCost, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::planning::umbp::UserCost, late_operate_unit_cost_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::planning::umbp::UserCost, cancel_operation_unit_cost_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::planning::umbp::NavigationCost, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::planning::umbp::NavigationCost, ref_line_change_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::planning::umbp::HdiCost, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::planning::umbp::HdiCost, hdi_weight_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::planning::umbp::HdiCost, hdi_win_size_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::planning::umbp::FpbConfig, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::planning::umbp::FpbConfig, layer_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::planning::umbp::FpbConfig, step_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::planning::umbp::FpbConfig, tree_height_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::planning::umbp::FpbConfig, l_ref_to_left_road_bound_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::planning::umbp::FpbConfig, l_ref_to_right_road_bound_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::planning::umbp::SampleConfig, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::planning::umbp::SampleConfig, s_sample_distance_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::planning::umbp::SampleConfig, s_sample_num_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::planning::umbp::SampleConfig, l_sample_distance_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::planning::umbp::SampleConfig, l_sample_num_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::planning::umbp::SampleConfig, acc_ref_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::planning::umbp::SampleConfig, dec_ref_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::planning::umbp::SampleConfig, lane_width_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::planning::umbp::SampleConfig, increased_sl_distance_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::planning::umbp::SampleConfig, increased_st_distance_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::planning::umbp::PropogateConfig, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::planning::umbp::PropogateConfig, fpb_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::planning::umbp::PropogateConfig, sample_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::planning::umbp::CostConfig, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::planning::umbp::CostConfig, efficiency_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::planning::umbp::CostConfig, safety_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::planning::umbp::CostConfig, user_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::planning::umbp::CostConfig, navigation_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::planning::umbp::CostConfig, discount_factor_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::planning::umbp::CostConfig, hdi_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::planning::umbp::EgoConfig, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::planning::umbp::EgoConfig, car_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::planning::umbp::EgoConfig, map_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::planning::umbp::BezierConfig, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::planning::umbp::BezierConfig, weight_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::planning::umbp::BezierConfig, cube_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::planning::umbp::WeightConfig, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::planning::umbp::WeightConfig, weight_p_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::planning::umbp::WeightConfig, weight_c_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::planning::umbp::CubeConfig, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::planning::umbp::CubeConfig, v_lb_s_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::planning::umbp::CubeConfig, v_lb_l_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::planning::umbp::CubeConfig, v_ub_s_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::planning::umbp::CubeConfig, v_ub_l_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::planning::umbp::CubeConfig, a_lb_s_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::planning::umbp::CubeConfig, a_lb_l_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::planning::umbp::CubeConfig, a_ub_s_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::planning::umbp::CubeConfig, a_ub_l_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::planning::umbp::CarConfig, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::planning::umbp::CarConfig, car_width_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::planning::umbp::CarConfig, car_length_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::planning::umbp::MapConfig, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::planning::umbp::MapConfig, reference_speed_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::planning::umbp::Config, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::planning::umbp::Config, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::planning::umbp::Config, version_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::planning::umbp::Config, status_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::planning::umbp::Config, cost_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::planning::umbp::Config, propogate_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::planning::umbp::Config, ego_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::planning::umbp::Config, bezier_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::planning::umbp::EfficiencyCost)},
  { 12, -1, sizeof(::planning::umbp::SafetyCost)},
  { 18, -1, sizeof(::planning::umbp::UserCost)},
  { 25, -1, sizeof(::planning::umbp::NavigationCost)},
  { 31, -1, sizeof(::planning::umbp::HdiCost)},
  { 38, -1, sizeof(::planning::umbp::FpbConfig)},
  { 48, -1, sizeof(::planning::umbp::SampleConfig)},
  { 62, -1, sizeof(::planning::umbp::PropogateConfig)},
  { 69, -1, sizeof(::planning::umbp::CostConfig)},
  { 80, -1, sizeof(::planning::umbp::EgoConfig)},
  { 87, -1, sizeof(::planning::umbp::BezierConfig)},
  { 94, -1, sizeof(::planning::umbp::WeightConfig)},
  { 101, -1, sizeof(::planning::umbp::CubeConfig)},
  { 114, -1, sizeof(::planning::umbp::CarConfig)},
  { 121, -1, sizeof(::planning::umbp::MapConfig)},
  { 127, -1, sizeof(::planning::umbp::Config)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::planning::umbp::_EfficiencyCost_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::planning::umbp::_SafetyCost_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::planning::umbp::_UserCost_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::planning::umbp::_NavigationCost_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::planning::umbp::_HdiCost_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::planning::umbp::_FpbConfig_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::planning::umbp::_SampleConfig_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::planning::umbp::_PropogateConfig_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::planning::umbp::_CostConfig_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::planning::umbp::_EgoConfig_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::planning::umbp::_BezierConfig_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::planning::umbp::_WeightConfig_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::planning::umbp::_CubeConfig_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::planning::umbp::_CarConfig_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::planning::umbp::_MapConfig_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::planning::umbp::_Config_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "umbp_config.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 16);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\021umbp_config.proto\022\rplanning.umbp\"\260\002\n\016E"
      "fficiencyCost\022+\n#ego_lack_speed_to_desir"
      "ed_unit_cost\030\001 \001(\001\022+\n#ego_over_speed_to_"
      "desired_unit_cost\030\002 \001(\001\022&\n\036ego_desired_s"
      "peed_tolerate_gap\030\003 \001(\001\022\033\n\023leading_dista"
      "nce_th\030\004 \001(\001\022\032\n\022min_distance_ratio\030\005 \001(\001"
      "\022.\n&ego_speed_blocked_by_leading_unit_co"
      "st\030\006 \001(\001\0223\n+leading_speed_blocked_desire"
      "d_vel_unit_cost\030\007 \001(\001\" \n\nSafetyCost\022\022\n\ne"
      "go_to_obs\030\001 \001(\001\"N\n\010UserCost\022\036\n\026late_oper"
      "ate_unit_cost\030\001 \001(\001\022\"\n\032cancel_operation_"
      "unit_cost\030\002 \001(\001\")\n\016NavigationCost\022\027\n\017ref"
      "_line_change\030\001 \001(\001\"3\n\007HdiCost\022\022\n\nhdi_wei"
      "ght\030\001 \001(\001\022\024\n\014hdi_win_size\030\002 \001(\005\"\207\001\n\tFpbC"
      "onfig\022\022\n\nlayer_time\030\001 \001(\001\022\014\n\004step\030\002 \001(\001\022"
      "\023\n\013tree_height\030\003 \001(\005\022 \n\030l_ref_to_left_ro"
      "ad_bound\030\004 \001(\001\022!\n\031l_ref_to_right_road_bo"
      "und\030\005 \001(\001\"\344\001\n\014SampleConfig\022\031\n\021s_sample_d"
      "istance\030\001 \001(\001\022\024\n\014s_sample_num\030\002 \001(\005\022\031\n\021l"
      "_sample_distance\030\003 \001(\001\022\024\n\014l_sample_num\030\004"
      " \001(\005\022\017\n\007acc_ref\030\005 \001(\001\022\017\n\007dec_ref\030\006 \001(\001\022\022"
      "\n\nlane_width\030\007 \001(\001\022\035\n\025increased_sl_dista"
      "nce\030\010 \001(\001\022\035\n\025increased_st_distance\030\t \001(\001"
      "\"e\n\017PropogateConfig\022%\n\003fpb\030\001 \001(\0132\030.plann"
      "ing.umbp.FpbConfig\022+\n\006sample\030\002 \001(\0132\033.pla"
      "nning.umbp.SampleConfig\"\202\002\n\nCostConfig\0221"
      "\n\nefficiency\030\001 \001(\0132\035.planning.umbp.Effic"
      "iencyCost\022)\n\006safety\030\002 \001(\0132\031.planning.umb"
      "p.SafetyCost\022%\n\004user\030\003 \001(\0132\027.planning.um"
      "bp.UserCost\0221\n\nnavigation\030\004 \001(\0132\035.planni"
      "ng.umbp.NavigationCost\022\027\n\017discount_facto"
      "r\030\005 \001(\001\022#\n\003hdi\030\006 \001(\0132\026.planning.umbp.Hdi"
      "Cost\"Y\n\tEgoConfig\022%\n\003car\030\001 \001(\0132\030.plannin"
      "g.umbp.CarConfig\022%\n\003map\030\002 \001(\0132\030.planning"
      ".umbp.MapConfig\"d\n\014BezierConfig\022+\n\006weigh"
      "t\030\001 \001(\0132\033.planning.umbp.WeightConfig\022\'\n\004"
      "cube\030\002 \001(\0132\031.planning.umbp.CubeConfig\"2\n"
      "\014WeightConfig\022\020\n\010weight_P\030\001 \001(\001\022\020\n\010weigh"
      "t_c\030\002 \001(\001\"\214\001\n\nCubeConfig\022\016\n\006v_lb_s\030\001 \001(\001"
      "\022\016\n\006v_lb_l\030\002 \001(\001\022\016\n\006v_ub_s\030\003 \001(\001\022\016\n\006v_ub"
      "_l\030\004 \001(\001\022\016\n\006a_lb_s\030\005 \001(\001\022\016\n\006a_lb_l\030\006 \001(\001"
      "\022\016\n\006a_ub_s\030\007 \001(\001\022\016\n\006a_ub_l\030\010 \001(\001\"2\n\tCarC"
      "onfig\022\021\n\tcar_width\030\001 \001(\001\022\022\n\ncar_length\030\002"
      " \001(\001\"$\n\tMapConfig\022\027\n\017reference_speed\030\001 \001"
      "(\001\"\347\001\n\006Config\022\014\n\004name\030\001 \001(\t\022\017\n\007version\030\002"
      " \001(\t\022\016\n\006status\030\003 \001(\t\022\'\n\004cost\030\004 \001(\0132\031.pla"
      "nning.umbp.CostConfig\0221\n\tpropogate\030\005 \001(\013"
      "2\036.planning.umbp.PropogateConfig\022%\n\003ego\030"
      "\006 \001(\0132\030.planning.umbp.EgoConfig\022+\n\006bezie"
      "r\030\007 \001(\0132\033.planning.umbp.BezierConfigb\006pr"
      "oto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 2004);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "umbp_config.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_umbp_5fconfig_2eproto
namespace planning {
namespace umbp {

// ===================================================================

void EfficiencyCost::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EfficiencyCost::kEgoLackSpeedToDesiredUnitCostFieldNumber;
const int EfficiencyCost::kEgoOverSpeedToDesiredUnitCostFieldNumber;
const int EfficiencyCost::kEgoDesiredSpeedTolerateGapFieldNumber;
const int EfficiencyCost::kLeadingDistanceThFieldNumber;
const int EfficiencyCost::kMinDistanceRatioFieldNumber;
const int EfficiencyCost::kEgoSpeedBlockedByLeadingUnitCostFieldNumber;
const int EfficiencyCost::kLeadingSpeedBlockedDesiredVelUnitCostFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EfficiencyCost::EfficiencyCost()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_umbp_5fconfig_2eproto::scc_info_EfficiencyCost.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:planning.umbp.EfficiencyCost)
}
EfficiencyCost::EfficiencyCost(const EfficiencyCost& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&ego_lack_speed_to_desired_unit_cost_, &from.ego_lack_speed_to_desired_unit_cost_,
    static_cast<size_t>(reinterpret_cast<char*>(&leading_speed_blocked_desired_vel_unit_cost_) -
    reinterpret_cast<char*>(&ego_lack_speed_to_desired_unit_cost_)) + sizeof(leading_speed_blocked_desired_vel_unit_cost_));
  // @@protoc_insertion_point(copy_constructor:planning.umbp.EfficiencyCost)
}

void EfficiencyCost::SharedCtor() {
  ::memset(&ego_lack_speed_to_desired_unit_cost_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&leading_speed_blocked_desired_vel_unit_cost_) -
      reinterpret_cast<char*>(&ego_lack_speed_to_desired_unit_cost_)) + sizeof(leading_speed_blocked_desired_vel_unit_cost_));
}

EfficiencyCost::~EfficiencyCost() {
  // @@protoc_insertion_point(destructor:planning.umbp.EfficiencyCost)
  SharedDtor();
}

void EfficiencyCost::SharedDtor() {
}

void EfficiencyCost::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* EfficiencyCost::descriptor() {
  ::protobuf_umbp_5fconfig_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_umbp_5fconfig_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const EfficiencyCost& EfficiencyCost::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_umbp_5fconfig_2eproto::scc_info_EfficiencyCost.base);
  return *internal_default_instance();
}


void EfficiencyCost::Clear() {
// @@protoc_insertion_point(message_clear_start:planning.umbp.EfficiencyCost)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&ego_lack_speed_to_desired_unit_cost_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&leading_speed_blocked_desired_vel_unit_cost_) -
      reinterpret_cast<char*>(&ego_lack_speed_to_desired_unit_cost_)) + sizeof(leading_speed_blocked_desired_vel_unit_cost_));
  _internal_metadata_.Clear();
}

bool EfficiencyCost::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:planning.umbp.EfficiencyCost)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // double ego_lack_speed_to_desired_unit_cost = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &ego_lack_speed_to_desired_unit_cost_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double ego_over_speed_to_desired_unit_cost = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u /* 17 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &ego_over_speed_to_desired_unit_cost_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double ego_desired_speed_tolerate_gap = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(25u /* 25 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &ego_desired_speed_tolerate_gap_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double leading_distance_th = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(33u /* 33 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &leading_distance_th_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double min_distance_ratio = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(41u /* 41 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &min_distance_ratio_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double ego_speed_blocked_by_leading_unit_cost = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(49u /* 49 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &ego_speed_blocked_by_leading_unit_cost_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double leading_speed_blocked_desired_vel_unit_cost = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(57u /* 57 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &leading_speed_blocked_desired_vel_unit_cost_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:planning.umbp.EfficiencyCost)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:planning.umbp.EfficiencyCost)
  return false;
#undef DO_
}

void EfficiencyCost::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:planning.umbp.EfficiencyCost)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double ego_lack_speed_to_desired_unit_cost = 1;
  if (this->ego_lack_speed_to_desired_unit_cost() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->ego_lack_speed_to_desired_unit_cost(), output);
  }

  // double ego_over_speed_to_desired_unit_cost = 2;
  if (this->ego_over_speed_to_desired_unit_cost() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->ego_over_speed_to_desired_unit_cost(), output);
  }

  // double ego_desired_speed_tolerate_gap = 3;
  if (this->ego_desired_speed_tolerate_gap() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(3, this->ego_desired_speed_tolerate_gap(), output);
  }

  // double leading_distance_th = 4;
  if (this->leading_distance_th() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(4, this->leading_distance_th(), output);
  }

  // double min_distance_ratio = 5;
  if (this->min_distance_ratio() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(5, this->min_distance_ratio(), output);
  }

  // double ego_speed_blocked_by_leading_unit_cost = 6;
  if (this->ego_speed_blocked_by_leading_unit_cost() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(6, this->ego_speed_blocked_by_leading_unit_cost(), output);
  }

  // double leading_speed_blocked_desired_vel_unit_cost = 7;
  if (this->leading_speed_blocked_desired_vel_unit_cost() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(7, this->leading_speed_blocked_desired_vel_unit_cost(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:planning.umbp.EfficiencyCost)
}

::google::protobuf::uint8* EfficiencyCost::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:planning.umbp.EfficiencyCost)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double ego_lack_speed_to_desired_unit_cost = 1;
  if (this->ego_lack_speed_to_desired_unit_cost() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(1, this->ego_lack_speed_to_desired_unit_cost(), target);
  }

  // double ego_over_speed_to_desired_unit_cost = 2;
  if (this->ego_over_speed_to_desired_unit_cost() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->ego_over_speed_to_desired_unit_cost(), target);
  }

  // double ego_desired_speed_tolerate_gap = 3;
  if (this->ego_desired_speed_tolerate_gap() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(3, this->ego_desired_speed_tolerate_gap(), target);
  }

  // double leading_distance_th = 4;
  if (this->leading_distance_th() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(4, this->leading_distance_th(), target);
  }

  // double min_distance_ratio = 5;
  if (this->min_distance_ratio() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(5, this->min_distance_ratio(), target);
  }

  // double ego_speed_blocked_by_leading_unit_cost = 6;
  if (this->ego_speed_blocked_by_leading_unit_cost() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(6, this->ego_speed_blocked_by_leading_unit_cost(), target);
  }

  // double leading_speed_blocked_desired_vel_unit_cost = 7;
  if (this->leading_speed_blocked_desired_vel_unit_cost() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(7, this->leading_speed_blocked_desired_vel_unit_cost(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:planning.umbp.EfficiencyCost)
  return target;
}

size_t EfficiencyCost::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:planning.umbp.EfficiencyCost)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // double ego_lack_speed_to_desired_unit_cost = 1;
  if (this->ego_lack_speed_to_desired_unit_cost() != 0) {
    total_size += 1 + 8;
  }

  // double ego_over_speed_to_desired_unit_cost = 2;
  if (this->ego_over_speed_to_desired_unit_cost() != 0) {
    total_size += 1 + 8;
  }

  // double ego_desired_speed_tolerate_gap = 3;
  if (this->ego_desired_speed_tolerate_gap() != 0) {
    total_size += 1 + 8;
  }

  // double leading_distance_th = 4;
  if (this->leading_distance_th() != 0) {
    total_size += 1 + 8;
  }

  // double min_distance_ratio = 5;
  if (this->min_distance_ratio() != 0) {
    total_size += 1 + 8;
  }

  // double ego_speed_blocked_by_leading_unit_cost = 6;
  if (this->ego_speed_blocked_by_leading_unit_cost() != 0) {
    total_size += 1 + 8;
  }

  // double leading_speed_blocked_desired_vel_unit_cost = 7;
  if (this->leading_speed_blocked_desired_vel_unit_cost() != 0) {
    total_size += 1 + 8;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void EfficiencyCost::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:planning.umbp.EfficiencyCost)
  GOOGLE_DCHECK_NE(&from, this);
  const EfficiencyCost* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const EfficiencyCost>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:planning.umbp.EfficiencyCost)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:planning.umbp.EfficiencyCost)
    MergeFrom(*source);
  }
}

void EfficiencyCost::MergeFrom(const EfficiencyCost& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:planning.umbp.EfficiencyCost)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.ego_lack_speed_to_desired_unit_cost() != 0) {
    set_ego_lack_speed_to_desired_unit_cost(from.ego_lack_speed_to_desired_unit_cost());
  }
  if (from.ego_over_speed_to_desired_unit_cost() != 0) {
    set_ego_over_speed_to_desired_unit_cost(from.ego_over_speed_to_desired_unit_cost());
  }
  if (from.ego_desired_speed_tolerate_gap() != 0) {
    set_ego_desired_speed_tolerate_gap(from.ego_desired_speed_tolerate_gap());
  }
  if (from.leading_distance_th() != 0) {
    set_leading_distance_th(from.leading_distance_th());
  }
  if (from.min_distance_ratio() != 0) {
    set_min_distance_ratio(from.min_distance_ratio());
  }
  if (from.ego_speed_blocked_by_leading_unit_cost() != 0) {
    set_ego_speed_blocked_by_leading_unit_cost(from.ego_speed_blocked_by_leading_unit_cost());
  }
  if (from.leading_speed_blocked_desired_vel_unit_cost() != 0) {
    set_leading_speed_blocked_desired_vel_unit_cost(from.leading_speed_blocked_desired_vel_unit_cost());
  }
}

void EfficiencyCost::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:planning.umbp.EfficiencyCost)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EfficiencyCost::CopyFrom(const EfficiencyCost& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:planning.umbp.EfficiencyCost)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EfficiencyCost::IsInitialized() const {
  return true;
}

void EfficiencyCost::Swap(EfficiencyCost* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EfficiencyCost::InternalSwap(EfficiencyCost* other) {
  using std::swap;
  swap(ego_lack_speed_to_desired_unit_cost_, other->ego_lack_speed_to_desired_unit_cost_);
  swap(ego_over_speed_to_desired_unit_cost_, other->ego_over_speed_to_desired_unit_cost_);
  swap(ego_desired_speed_tolerate_gap_, other->ego_desired_speed_tolerate_gap_);
  swap(leading_distance_th_, other->leading_distance_th_);
  swap(min_distance_ratio_, other->min_distance_ratio_);
  swap(ego_speed_blocked_by_leading_unit_cost_, other->ego_speed_blocked_by_leading_unit_cost_);
  swap(leading_speed_blocked_desired_vel_unit_cost_, other->leading_speed_blocked_desired_vel_unit_cost_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata EfficiencyCost::GetMetadata() const {
  protobuf_umbp_5fconfig_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_umbp_5fconfig_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SafetyCost::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SafetyCost::kEgoToObsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SafetyCost::SafetyCost()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_umbp_5fconfig_2eproto::scc_info_SafetyCost.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:planning.umbp.SafetyCost)
}
SafetyCost::SafetyCost(const SafetyCost& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ego_to_obs_ = from.ego_to_obs_;
  // @@protoc_insertion_point(copy_constructor:planning.umbp.SafetyCost)
}

void SafetyCost::SharedCtor() {
  ego_to_obs_ = 0;
}

SafetyCost::~SafetyCost() {
  // @@protoc_insertion_point(destructor:planning.umbp.SafetyCost)
  SharedDtor();
}

void SafetyCost::SharedDtor() {
}

void SafetyCost::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SafetyCost::descriptor() {
  ::protobuf_umbp_5fconfig_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_umbp_5fconfig_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SafetyCost& SafetyCost::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_umbp_5fconfig_2eproto::scc_info_SafetyCost.base);
  return *internal_default_instance();
}


void SafetyCost::Clear() {
// @@protoc_insertion_point(message_clear_start:planning.umbp.SafetyCost)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ego_to_obs_ = 0;
  _internal_metadata_.Clear();
}

bool SafetyCost::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:planning.umbp.SafetyCost)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // double ego_to_obs = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &ego_to_obs_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:planning.umbp.SafetyCost)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:planning.umbp.SafetyCost)
  return false;
#undef DO_
}

void SafetyCost::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:planning.umbp.SafetyCost)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double ego_to_obs = 1;
  if (this->ego_to_obs() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->ego_to_obs(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:planning.umbp.SafetyCost)
}

::google::protobuf::uint8* SafetyCost::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:planning.umbp.SafetyCost)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double ego_to_obs = 1;
  if (this->ego_to_obs() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(1, this->ego_to_obs(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:planning.umbp.SafetyCost)
  return target;
}

size_t SafetyCost::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:planning.umbp.SafetyCost)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // double ego_to_obs = 1;
  if (this->ego_to_obs() != 0) {
    total_size += 1 + 8;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SafetyCost::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:planning.umbp.SafetyCost)
  GOOGLE_DCHECK_NE(&from, this);
  const SafetyCost* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SafetyCost>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:planning.umbp.SafetyCost)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:planning.umbp.SafetyCost)
    MergeFrom(*source);
  }
}

void SafetyCost::MergeFrom(const SafetyCost& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:planning.umbp.SafetyCost)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.ego_to_obs() != 0) {
    set_ego_to_obs(from.ego_to_obs());
  }
}

void SafetyCost::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:planning.umbp.SafetyCost)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SafetyCost::CopyFrom(const SafetyCost& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:planning.umbp.SafetyCost)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SafetyCost::IsInitialized() const {
  return true;
}

void SafetyCost::Swap(SafetyCost* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SafetyCost::InternalSwap(SafetyCost* other) {
  using std::swap;
  swap(ego_to_obs_, other->ego_to_obs_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SafetyCost::GetMetadata() const {
  protobuf_umbp_5fconfig_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_umbp_5fconfig_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void UserCost::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UserCost::kLateOperateUnitCostFieldNumber;
const int UserCost::kCancelOperationUnitCostFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UserCost::UserCost()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_umbp_5fconfig_2eproto::scc_info_UserCost.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:planning.umbp.UserCost)
}
UserCost::UserCost(const UserCost& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&late_operate_unit_cost_, &from.late_operate_unit_cost_,
    static_cast<size_t>(reinterpret_cast<char*>(&cancel_operation_unit_cost_) -
    reinterpret_cast<char*>(&late_operate_unit_cost_)) + sizeof(cancel_operation_unit_cost_));
  // @@protoc_insertion_point(copy_constructor:planning.umbp.UserCost)
}

void UserCost::SharedCtor() {
  ::memset(&late_operate_unit_cost_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&cancel_operation_unit_cost_) -
      reinterpret_cast<char*>(&late_operate_unit_cost_)) + sizeof(cancel_operation_unit_cost_));
}

UserCost::~UserCost() {
  // @@protoc_insertion_point(destructor:planning.umbp.UserCost)
  SharedDtor();
}

void UserCost::SharedDtor() {
}

void UserCost::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* UserCost::descriptor() {
  ::protobuf_umbp_5fconfig_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_umbp_5fconfig_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UserCost& UserCost::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_umbp_5fconfig_2eproto::scc_info_UserCost.base);
  return *internal_default_instance();
}


void UserCost::Clear() {
// @@protoc_insertion_point(message_clear_start:planning.umbp.UserCost)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&late_operate_unit_cost_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&cancel_operation_unit_cost_) -
      reinterpret_cast<char*>(&late_operate_unit_cost_)) + sizeof(cancel_operation_unit_cost_));
  _internal_metadata_.Clear();
}

bool UserCost::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:planning.umbp.UserCost)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // double late_operate_unit_cost = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &late_operate_unit_cost_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double cancel_operation_unit_cost = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u /* 17 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &cancel_operation_unit_cost_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:planning.umbp.UserCost)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:planning.umbp.UserCost)
  return false;
#undef DO_
}

void UserCost::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:planning.umbp.UserCost)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double late_operate_unit_cost = 1;
  if (this->late_operate_unit_cost() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->late_operate_unit_cost(), output);
  }

  // double cancel_operation_unit_cost = 2;
  if (this->cancel_operation_unit_cost() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->cancel_operation_unit_cost(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:planning.umbp.UserCost)
}

::google::protobuf::uint8* UserCost::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:planning.umbp.UserCost)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double late_operate_unit_cost = 1;
  if (this->late_operate_unit_cost() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(1, this->late_operate_unit_cost(), target);
  }

  // double cancel_operation_unit_cost = 2;
  if (this->cancel_operation_unit_cost() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->cancel_operation_unit_cost(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:planning.umbp.UserCost)
  return target;
}

size_t UserCost::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:planning.umbp.UserCost)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // double late_operate_unit_cost = 1;
  if (this->late_operate_unit_cost() != 0) {
    total_size += 1 + 8;
  }

  // double cancel_operation_unit_cost = 2;
  if (this->cancel_operation_unit_cost() != 0) {
    total_size += 1 + 8;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UserCost::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:planning.umbp.UserCost)
  GOOGLE_DCHECK_NE(&from, this);
  const UserCost* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UserCost>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:planning.umbp.UserCost)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:planning.umbp.UserCost)
    MergeFrom(*source);
  }
}

void UserCost::MergeFrom(const UserCost& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:planning.umbp.UserCost)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.late_operate_unit_cost() != 0) {
    set_late_operate_unit_cost(from.late_operate_unit_cost());
  }
  if (from.cancel_operation_unit_cost() != 0) {
    set_cancel_operation_unit_cost(from.cancel_operation_unit_cost());
  }
}

void UserCost::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:planning.umbp.UserCost)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UserCost::CopyFrom(const UserCost& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:planning.umbp.UserCost)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UserCost::IsInitialized() const {
  return true;
}

void UserCost::Swap(UserCost* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UserCost::InternalSwap(UserCost* other) {
  using std::swap;
  swap(late_operate_unit_cost_, other->late_operate_unit_cost_);
  swap(cancel_operation_unit_cost_, other->cancel_operation_unit_cost_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata UserCost::GetMetadata() const {
  protobuf_umbp_5fconfig_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_umbp_5fconfig_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void NavigationCost::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int NavigationCost::kRefLineChangeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

NavigationCost::NavigationCost()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_umbp_5fconfig_2eproto::scc_info_NavigationCost.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:planning.umbp.NavigationCost)
}
NavigationCost::NavigationCost(const NavigationCost& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ref_line_change_ = from.ref_line_change_;
  // @@protoc_insertion_point(copy_constructor:planning.umbp.NavigationCost)
}

void NavigationCost::SharedCtor() {
  ref_line_change_ = 0;
}

NavigationCost::~NavigationCost() {
  // @@protoc_insertion_point(destructor:planning.umbp.NavigationCost)
  SharedDtor();
}

void NavigationCost::SharedDtor() {
}

void NavigationCost::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* NavigationCost::descriptor() {
  ::protobuf_umbp_5fconfig_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_umbp_5fconfig_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const NavigationCost& NavigationCost::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_umbp_5fconfig_2eproto::scc_info_NavigationCost.base);
  return *internal_default_instance();
}


void NavigationCost::Clear() {
// @@protoc_insertion_point(message_clear_start:planning.umbp.NavigationCost)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ref_line_change_ = 0;
  _internal_metadata_.Clear();
}

bool NavigationCost::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:planning.umbp.NavigationCost)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // double ref_line_change = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &ref_line_change_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:planning.umbp.NavigationCost)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:planning.umbp.NavigationCost)
  return false;
#undef DO_
}

void NavigationCost::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:planning.umbp.NavigationCost)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double ref_line_change = 1;
  if (this->ref_line_change() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->ref_line_change(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:planning.umbp.NavigationCost)
}

::google::protobuf::uint8* NavigationCost::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:planning.umbp.NavigationCost)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double ref_line_change = 1;
  if (this->ref_line_change() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(1, this->ref_line_change(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:planning.umbp.NavigationCost)
  return target;
}

size_t NavigationCost::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:planning.umbp.NavigationCost)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // double ref_line_change = 1;
  if (this->ref_line_change() != 0) {
    total_size += 1 + 8;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void NavigationCost::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:planning.umbp.NavigationCost)
  GOOGLE_DCHECK_NE(&from, this);
  const NavigationCost* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const NavigationCost>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:planning.umbp.NavigationCost)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:planning.umbp.NavigationCost)
    MergeFrom(*source);
  }
}

void NavigationCost::MergeFrom(const NavigationCost& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:planning.umbp.NavigationCost)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.ref_line_change() != 0) {
    set_ref_line_change(from.ref_line_change());
  }
}

void NavigationCost::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:planning.umbp.NavigationCost)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void NavigationCost::CopyFrom(const NavigationCost& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:planning.umbp.NavigationCost)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NavigationCost::IsInitialized() const {
  return true;
}

void NavigationCost::Swap(NavigationCost* other) {
  if (other == this) return;
  InternalSwap(other);
}
void NavigationCost::InternalSwap(NavigationCost* other) {
  using std::swap;
  swap(ref_line_change_, other->ref_line_change_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata NavigationCost::GetMetadata() const {
  protobuf_umbp_5fconfig_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_umbp_5fconfig_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void HdiCost::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int HdiCost::kHdiWeightFieldNumber;
const int HdiCost::kHdiWinSizeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

HdiCost::HdiCost()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_umbp_5fconfig_2eproto::scc_info_HdiCost.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:planning.umbp.HdiCost)
}
HdiCost::HdiCost(const HdiCost& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&hdi_weight_, &from.hdi_weight_,
    static_cast<size_t>(reinterpret_cast<char*>(&hdi_win_size_) -
    reinterpret_cast<char*>(&hdi_weight_)) + sizeof(hdi_win_size_));
  // @@protoc_insertion_point(copy_constructor:planning.umbp.HdiCost)
}

void HdiCost::SharedCtor() {
  ::memset(&hdi_weight_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&hdi_win_size_) -
      reinterpret_cast<char*>(&hdi_weight_)) + sizeof(hdi_win_size_));
}

HdiCost::~HdiCost() {
  // @@protoc_insertion_point(destructor:planning.umbp.HdiCost)
  SharedDtor();
}

void HdiCost::SharedDtor() {
}

void HdiCost::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* HdiCost::descriptor() {
  ::protobuf_umbp_5fconfig_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_umbp_5fconfig_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const HdiCost& HdiCost::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_umbp_5fconfig_2eproto::scc_info_HdiCost.base);
  return *internal_default_instance();
}


void HdiCost::Clear() {
// @@protoc_insertion_point(message_clear_start:planning.umbp.HdiCost)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&hdi_weight_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&hdi_win_size_) -
      reinterpret_cast<char*>(&hdi_weight_)) + sizeof(hdi_win_size_));
  _internal_metadata_.Clear();
}

bool HdiCost::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:planning.umbp.HdiCost)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // double hdi_weight = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &hdi_weight_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 hdi_win_size = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &hdi_win_size_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:planning.umbp.HdiCost)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:planning.umbp.HdiCost)
  return false;
#undef DO_
}

void HdiCost::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:planning.umbp.HdiCost)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double hdi_weight = 1;
  if (this->hdi_weight() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->hdi_weight(), output);
  }

  // int32 hdi_win_size = 2;
  if (this->hdi_win_size() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->hdi_win_size(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:planning.umbp.HdiCost)
}

::google::protobuf::uint8* HdiCost::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:planning.umbp.HdiCost)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double hdi_weight = 1;
  if (this->hdi_weight() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(1, this->hdi_weight(), target);
  }

  // int32 hdi_win_size = 2;
  if (this->hdi_win_size() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->hdi_win_size(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:planning.umbp.HdiCost)
  return target;
}

size_t HdiCost::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:planning.umbp.HdiCost)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // double hdi_weight = 1;
  if (this->hdi_weight() != 0) {
    total_size += 1 + 8;
  }

  // int32 hdi_win_size = 2;
  if (this->hdi_win_size() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->hdi_win_size());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void HdiCost::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:planning.umbp.HdiCost)
  GOOGLE_DCHECK_NE(&from, this);
  const HdiCost* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const HdiCost>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:planning.umbp.HdiCost)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:planning.umbp.HdiCost)
    MergeFrom(*source);
  }
}

void HdiCost::MergeFrom(const HdiCost& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:planning.umbp.HdiCost)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.hdi_weight() != 0) {
    set_hdi_weight(from.hdi_weight());
  }
  if (from.hdi_win_size() != 0) {
    set_hdi_win_size(from.hdi_win_size());
  }
}

void HdiCost::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:planning.umbp.HdiCost)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HdiCost::CopyFrom(const HdiCost& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:planning.umbp.HdiCost)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HdiCost::IsInitialized() const {
  return true;
}

void HdiCost::Swap(HdiCost* other) {
  if (other == this) return;
  InternalSwap(other);
}
void HdiCost::InternalSwap(HdiCost* other) {
  using std::swap;
  swap(hdi_weight_, other->hdi_weight_);
  swap(hdi_win_size_, other->hdi_win_size_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata HdiCost::GetMetadata() const {
  protobuf_umbp_5fconfig_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_umbp_5fconfig_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void FpbConfig::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FpbConfig::kLayerTimeFieldNumber;
const int FpbConfig::kStepFieldNumber;
const int FpbConfig::kTreeHeightFieldNumber;
const int FpbConfig::kLRefToLeftRoadBoundFieldNumber;
const int FpbConfig::kLRefToRightRoadBoundFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FpbConfig::FpbConfig()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_umbp_5fconfig_2eproto::scc_info_FpbConfig.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:planning.umbp.FpbConfig)
}
FpbConfig::FpbConfig(const FpbConfig& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&layer_time_, &from.layer_time_,
    static_cast<size_t>(reinterpret_cast<char*>(&tree_height_) -
    reinterpret_cast<char*>(&layer_time_)) + sizeof(tree_height_));
  // @@protoc_insertion_point(copy_constructor:planning.umbp.FpbConfig)
}

void FpbConfig::SharedCtor() {
  ::memset(&layer_time_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&tree_height_) -
      reinterpret_cast<char*>(&layer_time_)) + sizeof(tree_height_));
}

FpbConfig::~FpbConfig() {
  // @@protoc_insertion_point(destructor:planning.umbp.FpbConfig)
  SharedDtor();
}

void FpbConfig::SharedDtor() {
}

void FpbConfig::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* FpbConfig::descriptor() {
  ::protobuf_umbp_5fconfig_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_umbp_5fconfig_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const FpbConfig& FpbConfig::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_umbp_5fconfig_2eproto::scc_info_FpbConfig.base);
  return *internal_default_instance();
}


void FpbConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:planning.umbp.FpbConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&layer_time_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&tree_height_) -
      reinterpret_cast<char*>(&layer_time_)) + sizeof(tree_height_));
  _internal_metadata_.Clear();
}

bool FpbConfig::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:planning.umbp.FpbConfig)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // double layer_time = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &layer_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double step = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u /* 17 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &step_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 tree_height = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &tree_height_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double l_ref_to_left_road_bound = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(33u /* 33 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &l_ref_to_left_road_bound_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double l_ref_to_right_road_bound = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(41u /* 41 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &l_ref_to_right_road_bound_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:planning.umbp.FpbConfig)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:planning.umbp.FpbConfig)
  return false;
#undef DO_
}

void FpbConfig::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:planning.umbp.FpbConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double layer_time = 1;
  if (this->layer_time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->layer_time(), output);
  }

  // double step = 2;
  if (this->step() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->step(), output);
  }

  // int32 tree_height = 3;
  if (this->tree_height() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->tree_height(), output);
  }

  // double l_ref_to_left_road_bound = 4;
  if (this->l_ref_to_left_road_bound() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(4, this->l_ref_to_left_road_bound(), output);
  }

  // double l_ref_to_right_road_bound = 5;
  if (this->l_ref_to_right_road_bound() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(5, this->l_ref_to_right_road_bound(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:planning.umbp.FpbConfig)
}

::google::protobuf::uint8* FpbConfig::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:planning.umbp.FpbConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double layer_time = 1;
  if (this->layer_time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(1, this->layer_time(), target);
  }

  // double step = 2;
  if (this->step() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->step(), target);
  }

  // int32 tree_height = 3;
  if (this->tree_height() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->tree_height(), target);
  }

  // double l_ref_to_left_road_bound = 4;
  if (this->l_ref_to_left_road_bound() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(4, this->l_ref_to_left_road_bound(), target);
  }

  // double l_ref_to_right_road_bound = 5;
  if (this->l_ref_to_right_road_bound() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(5, this->l_ref_to_right_road_bound(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:planning.umbp.FpbConfig)
  return target;
}

size_t FpbConfig::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:planning.umbp.FpbConfig)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // double layer_time = 1;
  if (this->layer_time() != 0) {
    total_size += 1 + 8;
  }

  // double step = 2;
  if (this->step() != 0) {
    total_size += 1 + 8;
  }

  // double l_ref_to_left_road_bound = 4;
  if (this->l_ref_to_left_road_bound() != 0) {
    total_size += 1 + 8;
  }

  // double l_ref_to_right_road_bound = 5;
  if (this->l_ref_to_right_road_bound() != 0) {
    total_size += 1 + 8;
  }

  // int32 tree_height = 3;
  if (this->tree_height() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->tree_height());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void FpbConfig::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:planning.umbp.FpbConfig)
  GOOGLE_DCHECK_NE(&from, this);
  const FpbConfig* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const FpbConfig>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:planning.umbp.FpbConfig)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:planning.umbp.FpbConfig)
    MergeFrom(*source);
  }
}

void FpbConfig::MergeFrom(const FpbConfig& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:planning.umbp.FpbConfig)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.layer_time() != 0) {
    set_layer_time(from.layer_time());
  }
  if (from.step() != 0) {
    set_step(from.step());
  }
  if (from.l_ref_to_left_road_bound() != 0) {
    set_l_ref_to_left_road_bound(from.l_ref_to_left_road_bound());
  }
  if (from.l_ref_to_right_road_bound() != 0) {
    set_l_ref_to_right_road_bound(from.l_ref_to_right_road_bound());
  }
  if (from.tree_height() != 0) {
    set_tree_height(from.tree_height());
  }
}

void FpbConfig::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:planning.umbp.FpbConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FpbConfig::CopyFrom(const FpbConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:planning.umbp.FpbConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FpbConfig::IsInitialized() const {
  return true;
}

void FpbConfig::Swap(FpbConfig* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FpbConfig::InternalSwap(FpbConfig* other) {
  using std::swap;
  swap(layer_time_, other->layer_time_);
  swap(step_, other->step_);
  swap(l_ref_to_left_road_bound_, other->l_ref_to_left_road_bound_);
  swap(l_ref_to_right_road_bound_, other->l_ref_to_right_road_bound_);
  swap(tree_height_, other->tree_height_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata FpbConfig::GetMetadata() const {
  protobuf_umbp_5fconfig_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_umbp_5fconfig_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SampleConfig::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SampleConfig::kSSampleDistanceFieldNumber;
const int SampleConfig::kSSampleNumFieldNumber;
const int SampleConfig::kLSampleDistanceFieldNumber;
const int SampleConfig::kLSampleNumFieldNumber;
const int SampleConfig::kAccRefFieldNumber;
const int SampleConfig::kDecRefFieldNumber;
const int SampleConfig::kLaneWidthFieldNumber;
const int SampleConfig::kIncreasedSlDistanceFieldNumber;
const int SampleConfig::kIncreasedStDistanceFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SampleConfig::SampleConfig()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_umbp_5fconfig_2eproto::scc_info_SampleConfig.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:planning.umbp.SampleConfig)
}
SampleConfig::SampleConfig(const SampleConfig& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&s_sample_distance_, &from.s_sample_distance_,
    static_cast<size_t>(reinterpret_cast<char*>(&increased_st_distance_) -
    reinterpret_cast<char*>(&s_sample_distance_)) + sizeof(increased_st_distance_));
  // @@protoc_insertion_point(copy_constructor:planning.umbp.SampleConfig)
}

void SampleConfig::SharedCtor() {
  ::memset(&s_sample_distance_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&increased_st_distance_) -
      reinterpret_cast<char*>(&s_sample_distance_)) + sizeof(increased_st_distance_));
}

SampleConfig::~SampleConfig() {
  // @@protoc_insertion_point(destructor:planning.umbp.SampleConfig)
  SharedDtor();
}

void SampleConfig::SharedDtor() {
}

void SampleConfig::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SampleConfig::descriptor() {
  ::protobuf_umbp_5fconfig_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_umbp_5fconfig_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SampleConfig& SampleConfig::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_umbp_5fconfig_2eproto::scc_info_SampleConfig.base);
  return *internal_default_instance();
}


void SampleConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:planning.umbp.SampleConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&s_sample_distance_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&increased_st_distance_) -
      reinterpret_cast<char*>(&s_sample_distance_)) + sizeof(increased_st_distance_));
  _internal_metadata_.Clear();
}

bool SampleConfig::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:planning.umbp.SampleConfig)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // double s_sample_distance = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &s_sample_distance_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 s_sample_num = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &s_sample_num_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double l_sample_distance = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(25u /* 25 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &l_sample_distance_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 l_sample_num = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &l_sample_num_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double acc_ref = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(41u /* 41 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &acc_ref_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double dec_ref = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(49u /* 49 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &dec_ref_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double lane_width = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(57u /* 57 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &lane_width_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double increased_sl_distance = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(65u /* 65 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &increased_sl_distance_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double increased_st_distance = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(73u /* 73 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &increased_st_distance_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:planning.umbp.SampleConfig)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:planning.umbp.SampleConfig)
  return false;
#undef DO_
}

void SampleConfig::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:planning.umbp.SampleConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double s_sample_distance = 1;
  if (this->s_sample_distance() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->s_sample_distance(), output);
  }

  // int32 s_sample_num = 2;
  if (this->s_sample_num() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->s_sample_num(), output);
  }

  // double l_sample_distance = 3;
  if (this->l_sample_distance() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(3, this->l_sample_distance(), output);
  }

  // int32 l_sample_num = 4;
  if (this->l_sample_num() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->l_sample_num(), output);
  }

  // double acc_ref = 5;
  if (this->acc_ref() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(5, this->acc_ref(), output);
  }

  // double dec_ref = 6;
  if (this->dec_ref() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(6, this->dec_ref(), output);
  }

  // double lane_width = 7;
  if (this->lane_width() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(7, this->lane_width(), output);
  }

  // double increased_sl_distance = 8;
  if (this->increased_sl_distance() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(8, this->increased_sl_distance(), output);
  }

  // double increased_st_distance = 9;
  if (this->increased_st_distance() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(9, this->increased_st_distance(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:planning.umbp.SampleConfig)
}

::google::protobuf::uint8* SampleConfig::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:planning.umbp.SampleConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double s_sample_distance = 1;
  if (this->s_sample_distance() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(1, this->s_sample_distance(), target);
  }

  // int32 s_sample_num = 2;
  if (this->s_sample_num() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->s_sample_num(), target);
  }

  // double l_sample_distance = 3;
  if (this->l_sample_distance() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(3, this->l_sample_distance(), target);
  }

  // int32 l_sample_num = 4;
  if (this->l_sample_num() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->l_sample_num(), target);
  }

  // double acc_ref = 5;
  if (this->acc_ref() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(5, this->acc_ref(), target);
  }

  // double dec_ref = 6;
  if (this->dec_ref() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(6, this->dec_ref(), target);
  }

  // double lane_width = 7;
  if (this->lane_width() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(7, this->lane_width(), target);
  }

  // double increased_sl_distance = 8;
  if (this->increased_sl_distance() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(8, this->increased_sl_distance(), target);
  }

  // double increased_st_distance = 9;
  if (this->increased_st_distance() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(9, this->increased_st_distance(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:planning.umbp.SampleConfig)
  return target;
}

size_t SampleConfig::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:planning.umbp.SampleConfig)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // double s_sample_distance = 1;
  if (this->s_sample_distance() != 0) {
    total_size += 1 + 8;
  }

  // double l_sample_distance = 3;
  if (this->l_sample_distance() != 0) {
    total_size += 1 + 8;
  }

  // int32 s_sample_num = 2;
  if (this->s_sample_num() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->s_sample_num());
  }

  // int32 l_sample_num = 4;
  if (this->l_sample_num() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->l_sample_num());
  }

  // double acc_ref = 5;
  if (this->acc_ref() != 0) {
    total_size += 1 + 8;
  }

  // double dec_ref = 6;
  if (this->dec_ref() != 0) {
    total_size += 1 + 8;
  }

  // double lane_width = 7;
  if (this->lane_width() != 0) {
    total_size += 1 + 8;
  }

  // double increased_sl_distance = 8;
  if (this->increased_sl_distance() != 0) {
    total_size += 1 + 8;
  }

  // double increased_st_distance = 9;
  if (this->increased_st_distance() != 0) {
    total_size += 1 + 8;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SampleConfig::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:planning.umbp.SampleConfig)
  GOOGLE_DCHECK_NE(&from, this);
  const SampleConfig* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SampleConfig>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:planning.umbp.SampleConfig)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:planning.umbp.SampleConfig)
    MergeFrom(*source);
  }
}

void SampleConfig::MergeFrom(const SampleConfig& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:planning.umbp.SampleConfig)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.s_sample_distance() != 0) {
    set_s_sample_distance(from.s_sample_distance());
  }
  if (from.l_sample_distance() != 0) {
    set_l_sample_distance(from.l_sample_distance());
  }
  if (from.s_sample_num() != 0) {
    set_s_sample_num(from.s_sample_num());
  }
  if (from.l_sample_num() != 0) {
    set_l_sample_num(from.l_sample_num());
  }
  if (from.acc_ref() != 0) {
    set_acc_ref(from.acc_ref());
  }
  if (from.dec_ref() != 0) {
    set_dec_ref(from.dec_ref());
  }
  if (from.lane_width() != 0) {
    set_lane_width(from.lane_width());
  }
  if (from.increased_sl_distance() != 0) {
    set_increased_sl_distance(from.increased_sl_distance());
  }
  if (from.increased_st_distance() != 0) {
    set_increased_st_distance(from.increased_st_distance());
  }
}

void SampleConfig::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:planning.umbp.SampleConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SampleConfig::CopyFrom(const SampleConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:planning.umbp.SampleConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SampleConfig::IsInitialized() const {
  return true;
}

void SampleConfig::Swap(SampleConfig* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SampleConfig::InternalSwap(SampleConfig* other) {
  using std::swap;
  swap(s_sample_distance_, other->s_sample_distance_);
  swap(l_sample_distance_, other->l_sample_distance_);
  swap(s_sample_num_, other->s_sample_num_);
  swap(l_sample_num_, other->l_sample_num_);
  swap(acc_ref_, other->acc_ref_);
  swap(dec_ref_, other->dec_ref_);
  swap(lane_width_, other->lane_width_);
  swap(increased_sl_distance_, other->increased_sl_distance_);
  swap(increased_st_distance_, other->increased_st_distance_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SampleConfig::GetMetadata() const {
  protobuf_umbp_5fconfig_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_umbp_5fconfig_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PropogateConfig::InitAsDefaultInstance() {
  ::planning::umbp::_PropogateConfig_default_instance_._instance.get_mutable()->fpb_ = const_cast< ::planning::umbp::FpbConfig*>(
      ::planning::umbp::FpbConfig::internal_default_instance());
  ::planning::umbp::_PropogateConfig_default_instance_._instance.get_mutable()->sample_ = const_cast< ::planning::umbp::SampleConfig*>(
      ::planning::umbp::SampleConfig::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PropogateConfig::kFpbFieldNumber;
const int PropogateConfig::kSampleFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PropogateConfig::PropogateConfig()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_umbp_5fconfig_2eproto::scc_info_PropogateConfig.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:planning.umbp.PropogateConfig)
}
PropogateConfig::PropogateConfig(const PropogateConfig& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_fpb()) {
    fpb_ = new ::planning::umbp::FpbConfig(*from.fpb_);
  } else {
    fpb_ = NULL;
  }
  if (from.has_sample()) {
    sample_ = new ::planning::umbp::SampleConfig(*from.sample_);
  } else {
    sample_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:planning.umbp.PropogateConfig)
}

void PropogateConfig::SharedCtor() {
  ::memset(&fpb_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&sample_) -
      reinterpret_cast<char*>(&fpb_)) + sizeof(sample_));
}

PropogateConfig::~PropogateConfig() {
  // @@protoc_insertion_point(destructor:planning.umbp.PropogateConfig)
  SharedDtor();
}

void PropogateConfig::SharedDtor() {
  if (this != internal_default_instance()) delete fpb_;
  if (this != internal_default_instance()) delete sample_;
}

void PropogateConfig::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* PropogateConfig::descriptor() {
  ::protobuf_umbp_5fconfig_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_umbp_5fconfig_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PropogateConfig& PropogateConfig::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_umbp_5fconfig_2eproto::scc_info_PropogateConfig.base);
  return *internal_default_instance();
}


void PropogateConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:planning.umbp.PropogateConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && fpb_ != NULL) {
    delete fpb_;
  }
  fpb_ = NULL;
  if (GetArenaNoVirtual() == NULL && sample_ != NULL) {
    delete sample_;
  }
  sample_ = NULL;
  _internal_metadata_.Clear();
}

bool PropogateConfig::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:planning.umbp.PropogateConfig)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .planning.umbp.FpbConfig fpb = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_fpb()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .planning.umbp.SampleConfig sample = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_sample()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:planning.umbp.PropogateConfig)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:planning.umbp.PropogateConfig)
  return false;
#undef DO_
}

void PropogateConfig::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:planning.umbp.PropogateConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .planning.umbp.FpbConfig fpb = 1;
  if (this->has_fpb()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_fpb(), output);
  }

  // .planning.umbp.SampleConfig sample = 2;
  if (this->has_sample()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_sample(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:planning.umbp.PropogateConfig)
}

::google::protobuf::uint8* PropogateConfig::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:planning.umbp.PropogateConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .planning.umbp.FpbConfig fpb = 1;
  if (this->has_fpb()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_fpb(), deterministic, target);
  }

  // .planning.umbp.SampleConfig sample = 2;
  if (this->has_sample()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_sample(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:planning.umbp.PropogateConfig)
  return target;
}

size_t PropogateConfig::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:planning.umbp.PropogateConfig)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .planning.umbp.FpbConfig fpb = 1;
  if (this->has_fpb()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *fpb_);
  }

  // .planning.umbp.SampleConfig sample = 2;
  if (this->has_sample()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *sample_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PropogateConfig::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:planning.umbp.PropogateConfig)
  GOOGLE_DCHECK_NE(&from, this);
  const PropogateConfig* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PropogateConfig>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:planning.umbp.PropogateConfig)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:planning.umbp.PropogateConfig)
    MergeFrom(*source);
  }
}

void PropogateConfig::MergeFrom(const PropogateConfig& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:planning.umbp.PropogateConfig)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_fpb()) {
    mutable_fpb()->::planning::umbp::FpbConfig::MergeFrom(from.fpb());
  }
  if (from.has_sample()) {
    mutable_sample()->::planning::umbp::SampleConfig::MergeFrom(from.sample());
  }
}

void PropogateConfig::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:planning.umbp.PropogateConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PropogateConfig::CopyFrom(const PropogateConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:planning.umbp.PropogateConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PropogateConfig::IsInitialized() const {
  return true;
}

void PropogateConfig::Swap(PropogateConfig* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PropogateConfig::InternalSwap(PropogateConfig* other) {
  using std::swap;
  swap(fpb_, other->fpb_);
  swap(sample_, other->sample_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata PropogateConfig::GetMetadata() const {
  protobuf_umbp_5fconfig_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_umbp_5fconfig_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CostConfig::InitAsDefaultInstance() {
  ::planning::umbp::_CostConfig_default_instance_._instance.get_mutable()->efficiency_ = const_cast< ::planning::umbp::EfficiencyCost*>(
      ::planning::umbp::EfficiencyCost::internal_default_instance());
  ::planning::umbp::_CostConfig_default_instance_._instance.get_mutable()->safety_ = const_cast< ::planning::umbp::SafetyCost*>(
      ::planning::umbp::SafetyCost::internal_default_instance());
  ::planning::umbp::_CostConfig_default_instance_._instance.get_mutable()->user_ = const_cast< ::planning::umbp::UserCost*>(
      ::planning::umbp::UserCost::internal_default_instance());
  ::planning::umbp::_CostConfig_default_instance_._instance.get_mutable()->navigation_ = const_cast< ::planning::umbp::NavigationCost*>(
      ::planning::umbp::NavigationCost::internal_default_instance());
  ::planning::umbp::_CostConfig_default_instance_._instance.get_mutable()->hdi_ = const_cast< ::planning::umbp::HdiCost*>(
      ::planning::umbp::HdiCost::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CostConfig::kEfficiencyFieldNumber;
const int CostConfig::kSafetyFieldNumber;
const int CostConfig::kUserFieldNumber;
const int CostConfig::kNavigationFieldNumber;
const int CostConfig::kDiscountFactorFieldNumber;
const int CostConfig::kHdiFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CostConfig::CostConfig()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_umbp_5fconfig_2eproto::scc_info_CostConfig.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:planning.umbp.CostConfig)
}
CostConfig::CostConfig(const CostConfig& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_efficiency()) {
    efficiency_ = new ::planning::umbp::EfficiencyCost(*from.efficiency_);
  } else {
    efficiency_ = NULL;
  }
  if (from.has_safety()) {
    safety_ = new ::planning::umbp::SafetyCost(*from.safety_);
  } else {
    safety_ = NULL;
  }
  if (from.has_user()) {
    user_ = new ::planning::umbp::UserCost(*from.user_);
  } else {
    user_ = NULL;
  }
  if (from.has_navigation()) {
    navigation_ = new ::planning::umbp::NavigationCost(*from.navigation_);
  } else {
    navigation_ = NULL;
  }
  if (from.has_hdi()) {
    hdi_ = new ::planning::umbp::HdiCost(*from.hdi_);
  } else {
    hdi_ = NULL;
  }
  discount_factor_ = from.discount_factor_;
  // @@protoc_insertion_point(copy_constructor:planning.umbp.CostConfig)
}

void CostConfig::SharedCtor() {
  ::memset(&efficiency_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&discount_factor_) -
      reinterpret_cast<char*>(&efficiency_)) + sizeof(discount_factor_));
}

CostConfig::~CostConfig() {
  // @@protoc_insertion_point(destructor:planning.umbp.CostConfig)
  SharedDtor();
}

void CostConfig::SharedDtor() {
  if (this != internal_default_instance()) delete efficiency_;
  if (this != internal_default_instance()) delete safety_;
  if (this != internal_default_instance()) delete user_;
  if (this != internal_default_instance()) delete navigation_;
  if (this != internal_default_instance()) delete hdi_;
}

void CostConfig::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CostConfig::descriptor() {
  ::protobuf_umbp_5fconfig_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_umbp_5fconfig_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CostConfig& CostConfig::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_umbp_5fconfig_2eproto::scc_info_CostConfig.base);
  return *internal_default_instance();
}


void CostConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:planning.umbp.CostConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && efficiency_ != NULL) {
    delete efficiency_;
  }
  efficiency_ = NULL;
  if (GetArenaNoVirtual() == NULL && safety_ != NULL) {
    delete safety_;
  }
  safety_ = NULL;
  if (GetArenaNoVirtual() == NULL && user_ != NULL) {
    delete user_;
  }
  user_ = NULL;
  if (GetArenaNoVirtual() == NULL && navigation_ != NULL) {
    delete navigation_;
  }
  navigation_ = NULL;
  if (GetArenaNoVirtual() == NULL && hdi_ != NULL) {
    delete hdi_;
  }
  hdi_ = NULL;
  discount_factor_ = 0;
  _internal_metadata_.Clear();
}

bool CostConfig::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:planning.umbp.CostConfig)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .planning.umbp.EfficiencyCost efficiency = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_efficiency()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .planning.umbp.SafetyCost safety = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_safety()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .planning.umbp.UserCost user = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_user()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .planning.umbp.NavigationCost navigation = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_navigation()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double discount_factor = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(41u /* 41 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &discount_factor_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .planning.umbp.HdiCost hdi = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_hdi()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:planning.umbp.CostConfig)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:planning.umbp.CostConfig)
  return false;
#undef DO_
}

void CostConfig::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:planning.umbp.CostConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .planning.umbp.EfficiencyCost efficiency = 1;
  if (this->has_efficiency()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_efficiency(), output);
  }

  // .planning.umbp.SafetyCost safety = 2;
  if (this->has_safety()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_safety(), output);
  }

  // .planning.umbp.UserCost user = 3;
  if (this->has_user()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_user(), output);
  }

  // .planning.umbp.NavigationCost navigation = 4;
  if (this->has_navigation()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_navigation(), output);
  }

  // double discount_factor = 5;
  if (this->discount_factor() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(5, this->discount_factor(), output);
  }

  // .planning.umbp.HdiCost hdi = 6;
  if (this->has_hdi()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->_internal_hdi(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:planning.umbp.CostConfig)
}

::google::protobuf::uint8* CostConfig::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:planning.umbp.CostConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .planning.umbp.EfficiencyCost efficiency = 1;
  if (this->has_efficiency()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_efficiency(), deterministic, target);
  }

  // .planning.umbp.SafetyCost safety = 2;
  if (this->has_safety()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_safety(), deterministic, target);
  }

  // .planning.umbp.UserCost user = 3;
  if (this->has_user()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_user(), deterministic, target);
  }

  // .planning.umbp.NavigationCost navigation = 4;
  if (this->has_navigation()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_navigation(), deterministic, target);
  }

  // double discount_factor = 5;
  if (this->discount_factor() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(5, this->discount_factor(), target);
  }

  // .planning.umbp.HdiCost hdi = 6;
  if (this->has_hdi()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, this->_internal_hdi(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:planning.umbp.CostConfig)
  return target;
}

size_t CostConfig::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:planning.umbp.CostConfig)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .planning.umbp.EfficiencyCost efficiency = 1;
  if (this->has_efficiency()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *efficiency_);
  }

  // .planning.umbp.SafetyCost safety = 2;
  if (this->has_safety()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *safety_);
  }

  // .planning.umbp.UserCost user = 3;
  if (this->has_user()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *user_);
  }

  // .planning.umbp.NavigationCost navigation = 4;
  if (this->has_navigation()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *navigation_);
  }

  // .planning.umbp.HdiCost hdi = 6;
  if (this->has_hdi()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *hdi_);
  }

  // double discount_factor = 5;
  if (this->discount_factor() != 0) {
    total_size += 1 + 8;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CostConfig::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:planning.umbp.CostConfig)
  GOOGLE_DCHECK_NE(&from, this);
  const CostConfig* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CostConfig>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:planning.umbp.CostConfig)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:planning.umbp.CostConfig)
    MergeFrom(*source);
  }
}

void CostConfig::MergeFrom(const CostConfig& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:planning.umbp.CostConfig)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_efficiency()) {
    mutable_efficiency()->::planning::umbp::EfficiencyCost::MergeFrom(from.efficiency());
  }
  if (from.has_safety()) {
    mutable_safety()->::planning::umbp::SafetyCost::MergeFrom(from.safety());
  }
  if (from.has_user()) {
    mutable_user()->::planning::umbp::UserCost::MergeFrom(from.user());
  }
  if (from.has_navigation()) {
    mutable_navigation()->::planning::umbp::NavigationCost::MergeFrom(from.navigation());
  }
  if (from.has_hdi()) {
    mutable_hdi()->::planning::umbp::HdiCost::MergeFrom(from.hdi());
  }
  if (from.discount_factor() != 0) {
    set_discount_factor(from.discount_factor());
  }
}

void CostConfig::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:planning.umbp.CostConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CostConfig::CopyFrom(const CostConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:planning.umbp.CostConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CostConfig::IsInitialized() const {
  return true;
}

void CostConfig::Swap(CostConfig* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CostConfig::InternalSwap(CostConfig* other) {
  using std::swap;
  swap(efficiency_, other->efficiency_);
  swap(safety_, other->safety_);
  swap(user_, other->user_);
  swap(navigation_, other->navigation_);
  swap(hdi_, other->hdi_);
  swap(discount_factor_, other->discount_factor_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CostConfig::GetMetadata() const {
  protobuf_umbp_5fconfig_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_umbp_5fconfig_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void EgoConfig::InitAsDefaultInstance() {
  ::planning::umbp::_EgoConfig_default_instance_._instance.get_mutable()->car_ = const_cast< ::planning::umbp::CarConfig*>(
      ::planning::umbp::CarConfig::internal_default_instance());
  ::planning::umbp::_EgoConfig_default_instance_._instance.get_mutable()->map_ = const_cast< ::planning::umbp::MapConfig*>(
      ::planning::umbp::MapConfig::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EgoConfig::kCarFieldNumber;
const int EgoConfig::kMapFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EgoConfig::EgoConfig()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_umbp_5fconfig_2eproto::scc_info_EgoConfig.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:planning.umbp.EgoConfig)
}
EgoConfig::EgoConfig(const EgoConfig& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_car()) {
    car_ = new ::planning::umbp::CarConfig(*from.car_);
  } else {
    car_ = NULL;
  }
  if (from.has_map()) {
    map_ = new ::planning::umbp::MapConfig(*from.map_);
  } else {
    map_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:planning.umbp.EgoConfig)
}

void EgoConfig::SharedCtor() {
  ::memset(&car_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&map_) -
      reinterpret_cast<char*>(&car_)) + sizeof(map_));
}

EgoConfig::~EgoConfig() {
  // @@protoc_insertion_point(destructor:planning.umbp.EgoConfig)
  SharedDtor();
}

void EgoConfig::SharedDtor() {
  if (this != internal_default_instance()) delete car_;
  if (this != internal_default_instance()) delete map_;
}

void EgoConfig::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* EgoConfig::descriptor() {
  ::protobuf_umbp_5fconfig_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_umbp_5fconfig_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const EgoConfig& EgoConfig::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_umbp_5fconfig_2eproto::scc_info_EgoConfig.base);
  return *internal_default_instance();
}


void EgoConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:planning.umbp.EgoConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && car_ != NULL) {
    delete car_;
  }
  car_ = NULL;
  if (GetArenaNoVirtual() == NULL && map_ != NULL) {
    delete map_;
  }
  map_ = NULL;
  _internal_metadata_.Clear();
}

bool EgoConfig::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:planning.umbp.EgoConfig)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .planning.umbp.CarConfig car = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_car()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .planning.umbp.MapConfig map = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_map()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:planning.umbp.EgoConfig)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:planning.umbp.EgoConfig)
  return false;
#undef DO_
}

void EgoConfig::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:planning.umbp.EgoConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .planning.umbp.CarConfig car = 1;
  if (this->has_car()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_car(), output);
  }

  // .planning.umbp.MapConfig map = 2;
  if (this->has_map()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_map(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:planning.umbp.EgoConfig)
}

::google::protobuf::uint8* EgoConfig::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:planning.umbp.EgoConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .planning.umbp.CarConfig car = 1;
  if (this->has_car()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_car(), deterministic, target);
  }

  // .planning.umbp.MapConfig map = 2;
  if (this->has_map()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_map(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:planning.umbp.EgoConfig)
  return target;
}

size_t EgoConfig::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:planning.umbp.EgoConfig)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .planning.umbp.CarConfig car = 1;
  if (this->has_car()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *car_);
  }

  // .planning.umbp.MapConfig map = 2;
  if (this->has_map()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *map_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void EgoConfig::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:planning.umbp.EgoConfig)
  GOOGLE_DCHECK_NE(&from, this);
  const EgoConfig* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const EgoConfig>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:planning.umbp.EgoConfig)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:planning.umbp.EgoConfig)
    MergeFrom(*source);
  }
}

void EgoConfig::MergeFrom(const EgoConfig& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:planning.umbp.EgoConfig)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_car()) {
    mutable_car()->::planning::umbp::CarConfig::MergeFrom(from.car());
  }
  if (from.has_map()) {
    mutable_map()->::planning::umbp::MapConfig::MergeFrom(from.map());
  }
}

void EgoConfig::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:planning.umbp.EgoConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EgoConfig::CopyFrom(const EgoConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:planning.umbp.EgoConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EgoConfig::IsInitialized() const {
  return true;
}

void EgoConfig::Swap(EgoConfig* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EgoConfig::InternalSwap(EgoConfig* other) {
  using std::swap;
  swap(car_, other->car_);
  swap(map_, other->map_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata EgoConfig::GetMetadata() const {
  protobuf_umbp_5fconfig_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_umbp_5fconfig_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void BezierConfig::InitAsDefaultInstance() {
  ::planning::umbp::_BezierConfig_default_instance_._instance.get_mutable()->weight_ = const_cast< ::planning::umbp::WeightConfig*>(
      ::planning::umbp::WeightConfig::internal_default_instance());
  ::planning::umbp::_BezierConfig_default_instance_._instance.get_mutable()->cube_ = const_cast< ::planning::umbp::CubeConfig*>(
      ::planning::umbp::CubeConfig::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BezierConfig::kWeightFieldNumber;
const int BezierConfig::kCubeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BezierConfig::BezierConfig()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_umbp_5fconfig_2eproto::scc_info_BezierConfig.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:planning.umbp.BezierConfig)
}
BezierConfig::BezierConfig(const BezierConfig& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_weight()) {
    weight_ = new ::planning::umbp::WeightConfig(*from.weight_);
  } else {
    weight_ = NULL;
  }
  if (from.has_cube()) {
    cube_ = new ::planning::umbp::CubeConfig(*from.cube_);
  } else {
    cube_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:planning.umbp.BezierConfig)
}

void BezierConfig::SharedCtor() {
  ::memset(&weight_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&cube_) -
      reinterpret_cast<char*>(&weight_)) + sizeof(cube_));
}

BezierConfig::~BezierConfig() {
  // @@protoc_insertion_point(destructor:planning.umbp.BezierConfig)
  SharedDtor();
}

void BezierConfig::SharedDtor() {
  if (this != internal_default_instance()) delete weight_;
  if (this != internal_default_instance()) delete cube_;
}

void BezierConfig::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* BezierConfig::descriptor() {
  ::protobuf_umbp_5fconfig_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_umbp_5fconfig_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BezierConfig& BezierConfig::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_umbp_5fconfig_2eproto::scc_info_BezierConfig.base);
  return *internal_default_instance();
}


void BezierConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:planning.umbp.BezierConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && weight_ != NULL) {
    delete weight_;
  }
  weight_ = NULL;
  if (GetArenaNoVirtual() == NULL && cube_ != NULL) {
    delete cube_;
  }
  cube_ = NULL;
  _internal_metadata_.Clear();
}

bool BezierConfig::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:planning.umbp.BezierConfig)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .planning.umbp.WeightConfig weight = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_weight()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .planning.umbp.CubeConfig cube = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_cube()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:planning.umbp.BezierConfig)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:planning.umbp.BezierConfig)
  return false;
#undef DO_
}

void BezierConfig::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:planning.umbp.BezierConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .planning.umbp.WeightConfig weight = 1;
  if (this->has_weight()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_weight(), output);
  }

  // .planning.umbp.CubeConfig cube = 2;
  if (this->has_cube()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_cube(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:planning.umbp.BezierConfig)
}

::google::protobuf::uint8* BezierConfig::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:planning.umbp.BezierConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .planning.umbp.WeightConfig weight = 1;
  if (this->has_weight()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_weight(), deterministic, target);
  }

  // .planning.umbp.CubeConfig cube = 2;
  if (this->has_cube()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_cube(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:planning.umbp.BezierConfig)
  return target;
}

size_t BezierConfig::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:planning.umbp.BezierConfig)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .planning.umbp.WeightConfig weight = 1;
  if (this->has_weight()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *weight_);
  }

  // .planning.umbp.CubeConfig cube = 2;
  if (this->has_cube()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *cube_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void BezierConfig::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:planning.umbp.BezierConfig)
  GOOGLE_DCHECK_NE(&from, this);
  const BezierConfig* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BezierConfig>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:planning.umbp.BezierConfig)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:planning.umbp.BezierConfig)
    MergeFrom(*source);
  }
}

void BezierConfig::MergeFrom(const BezierConfig& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:planning.umbp.BezierConfig)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_weight()) {
    mutable_weight()->::planning::umbp::WeightConfig::MergeFrom(from.weight());
  }
  if (from.has_cube()) {
    mutable_cube()->::planning::umbp::CubeConfig::MergeFrom(from.cube());
  }
}

void BezierConfig::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:planning.umbp.BezierConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BezierConfig::CopyFrom(const BezierConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:planning.umbp.BezierConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BezierConfig::IsInitialized() const {
  return true;
}

void BezierConfig::Swap(BezierConfig* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BezierConfig::InternalSwap(BezierConfig* other) {
  using std::swap;
  swap(weight_, other->weight_);
  swap(cube_, other->cube_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata BezierConfig::GetMetadata() const {
  protobuf_umbp_5fconfig_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_umbp_5fconfig_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void WeightConfig::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int WeightConfig::kWeightPFieldNumber;
const int WeightConfig::kWeightCFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

WeightConfig::WeightConfig()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_umbp_5fconfig_2eproto::scc_info_WeightConfig.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:planning.umbp.WeightConfig)
}
WeightConfig::WeightConfig(const WeightConfig& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&weight_p_, &from.weight_p_,
    static_cast<size_t>(reinterpret_cast<char*>(&weight_c_) -
    reinterpret_cast<char*>(&weight_p_)) + sizeof(weight_c_));
  // @@protoc_insertion_point(copy_constructor:planning.umbp.WeightConfig)
}

void WeightConfig::SharedCtor() {
  ::memset(&weight_p_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&weight_c_) -
      reinterpret_cast<char*>(&weight_p_)) + sizeof(weight_c_));
}

WeightConfig::~WeightConfig() {
  // @@protoc_insertion_point(destructor:planning.umbp.WeightConfig)
  SharedDtor();
}

void WeightConfig::SharedDtor() {
}

void WeightConfig::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* WeightConfig::descriptor() {
  ::protobuf_umbp_5fconfig_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_umbp_5fconfig_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const WeightConfig& WeightConfig::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_umbp_5fconfig_2eproto::scc_info_WeightConfig.base);
  return *internal_default_instance();
}


void WeightConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:planning.umbp.WeightConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&weight_p_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&weight_c_) -
      reinterpret_cast<char*>(&weight_p_)) + sizeof(weight_c_));
  _internal_metadata_.Clear();
}

bool WeightConfig::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:planning.umbp.WeightConfig)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // double weight_P = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &weight_p_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double weight_c = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u /* 17 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &weight_c_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:planning.umbp.WeightConfig)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:planning.umbp.WeightConfig)
  return false;
#undef DO_
}

void WeightConfig::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:planning.umbp.WeightConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double weight_P = 1;
  if (this->weight_p() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->weight_p(), output);
  }

  // double weight_c = 2;
  if (this->weight_c() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->weight_c(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:planning.umbp.WeightConfig)
}

::google::protobuf::uint8* WeightConfig::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:planning.umbp.WeightConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double weight_P = 1;
  if (this->weight_p() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(1, this->weight_p(), target);
  }

  // double weight_c = 2;
  if (this->weight_c() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->weight_c(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:planning.umbp.WeightConfig)
  return target;
}

size_t WeightConfig::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:planning.umbp.WeightConfig)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // double weight_P = 1;
  if (this->weight_p() != 0) {
    total_size += 1 + 8;
  }

  // double weight_c = 2;
  if (this->weight_c() != 0) {
    total_size += 1 + 8;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void WeightConfig::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:planning.umbp.WeightConfig)
  GOOGLE_DCHECK_NE(&from, this);
  const WeightConfig* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const WeightConfig>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:planning.umbp.WeightConfig)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:planning.umbp.WeightConfig)
    MergeFrom(*source);
  }
}

void WeightConfig::MergeFrom(const WeightConfig& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:planning.umbp.WeightConfig)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.weight_p() != 0) {
    set_weight_p(from.weight_p());
  }
  if (from.weight_c() != 0) {
    set_weight_c(from.weight_c());
  }
}

void WeightConfig::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:planning.umbp.WeightConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void WeightConfig::CopyFrom(const WeightConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:planning.umbp.WeightConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WeightConfig::IsInitialized() const {
  return true;
}

void WeightConfig::Swap(WeightConfig* other) {
  if (other == this) return;
  InternalSwap(other);
}
void WeightConfig::InternalSwap(WeightConfig* other) {
  using std::swap;
  swap(weight_p_, other->weight_p_);
  swap(weight_c_, other->weight_c_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata WeightConfig::GetMetadata() const {
  protobuf_umbp_5fconfig_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_umbp_5fconfig_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CubeConfig::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CubeConfig::kVLbSFieldNumber;
const int CubeConfig::kVLbLFieldNumber;
const int CubeConfig::kVUbSFieldNumber;
const int CubeConfig::kVUbLFieldNumber;
const int CubeConfig::kALbSFieldNumber;
const int CubeConfig::kALbLFieldNumber;
const int CubeConfig::kAUbSFieldNumber;
const int CubeConfig::kAUbLFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CubeConfig::CubeConfig()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_umbp_5fconfig_2eproto::scc_info_CubeConfig.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:planning.umbp.CubeConfig)
}
CubeConfig::CubeConfig(const CubeConfig& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&v_lb_s_, &from.v_lb_s_,
    static_cast<size_t>(reinterpret_cast<char*>(&a_ub_l_) -
    reinterpret_cast<char*>(&v_lb_s_)) + sizeof(a_ub_l_));
  // @@protoc_insertion_point(copy_constructor:planning.umbp.CubeConfig)
}

void CubeConfig::SharedCtor() {
  ::memset(&v_lb_s_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&a_ub_l_) -
      reinterpret_cast<char*>(&v_lb_s_)) + sizeof(a_ub_l_));
}

CubeConfig::~CubeConfig() {
  // @@protoc_insertion_point(destructor:planning.umbp.CubeConfig)
  SharedDtor();
}

void CubeConfig::SharedDtor() {
}

void CubeConfig::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CubeConfig::descriptor() {
  ::protobuf_umbp_5fconfig_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_umbp_5fconfig_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CubeConfig& CubeConfig::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_umbp_5fconfig_2eproto::scc_info_CubeConfig.base);
  return *internal_default_instance();
}


void CubeConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:planning.umbp.CubeConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&v_lb_s_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&a_ub_l_) -
      reinterpret_cast<char*>(&v_lb_s_)) + sizeof(a_ub_l_));
  _internal_metadata_.Clear();
}

bool CubeConfig::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:planning.umbp.CubeConfig)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // double v_lb_s = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &v_lb_s_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double v_lb_l = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u /* 17 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &v_lb_l_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double v_ub_s = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(25u /* 25 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &v_ub_s_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double v_ub_l = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(33u /* 33 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &v_ub_l_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double a_lb_s = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(41u /* 41 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &a_lb_s_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double a_lb_l = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(49u /* 49 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &a_lb_l_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double a_ub_s = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(57u /* 57 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &a_ub_s_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double a_ub_l = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(65u /* 65 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &a_ub_l_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:planning.umbp.CubeConfig)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:planning.umbp.CubeConfig)
  return false;
#undef DO_
}

void CubeConfig::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:planning.umbp.CubeConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double v_lb_s = 1;
  if (this->v_lb_s() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->v_lb_s(), output);
  }

  // double v_lb_l = 2;
  if (this->v_lb_l() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->v_lb_l(), output);
  }

  // double v_ub_s = 3;
  if (this->v_ub_s() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(3, this->v_ub_s(), output);
  }

  // double v_ub_l = 4;
  if (this->v_ub_l() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(4, this->v_ub_l(), output);
  }

  // double a_lb_s = 5;
  if (this->a_lb_s() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(5, this->a_lb_s(), output);
  }

  // double a_lb_l = 6;
  if (this->a_lb_l() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(6, this->a_lb_l(), output);
  }

  // double a_ub_s = 7;
  if (this->a_ub_s() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(7, this->a_ub_s(), output);
  }

  // double a_ub_l = 8;
  if (this->a_ub_l() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(8, this->a_ub_l(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:planning.umbp.CubeConfig)
}

::google::protobuf::uint8* CubeConfig::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:planning.umbp.CubeConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double v_lb_s = 1;
  if (this->v_lb_s() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(1, this->v_lb_s(), target);
  }

  // double v_lb_l = 2;
  if (this->v_lb_l() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->v_lb_l(), target);
  }

  // double v_ub_s = 3;
  if (this->v_ub_s() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(3, this->v_ub_s(), target);
  }

  // double v_ub_l = 4;
  if (this->v_ub_l() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(4, this->v_ub_l(), target);
  }

  // double a_lb_s = 5;
  if (this->a_lb_s() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(5, this->a_lb_s(), target);
  }

  // double a_lb_l = 6;
  if (this->a_lb_l() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(6, this->a_lb_l(), target);
  }

  // double a_ub_s = 7;
  if (this->a_ub_s() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(7, this->a_ub_s(), target);
  }

  // double a_ub_l = 8;
  if (this->a_ub_l() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(8, this->a_ub_l(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:planning.umbp.CubeConfig)
  return target;
}

size_t CubeConfig::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:planning.umbp.CubeConfig)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // double v_lb_s = 1;
  if (this->v_lb_s() != 0) {
    total_size += 1 + 8;
  }

  // double v_lb_l = 2;
  if (this->v_lb_l() != 0) {
    total_size += 1 + 8;
  }

  // double v_ub_s = 3;
  if (this->v_ub_s() != 0) {
    total_size += 1 + 8;
  }

  // double v_ub_l = 4;
  if (this->v_ub_l() != 0) {
    total_size += 1 + 8;
  }

  // double a_lb_s = 5;
  if (this->a_lb_s() != 0) {
    total_size += 1 + 8;
  }

  // double a_lb_l = 6;
  if (this->a_lb_l() != 0) {
    total_size += 1 + 8;
  }

  // double a_ub_s = 7;
  if (this->a_ub_s() != 0) {
    total_size += 1 + 8;
  }

  // double a_ub_l = 8;
  if (this->a_ub_l() != 0) {
    total_size += 1 + 8;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CubeConfig::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:planning.umbp.CubeConfig)
  GOOGLE_DCHECK_NE(&from, this);
  const CubeConfig* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CubeConfig>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:planning.umbp.CubeConfig)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:planning.umbp.CubeConfig)
    MergeFrom(*source);
  }
}

void CubeConfig::MergeFrom(const CubeConfig& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:planning.umbp.CubeConfig)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.v_lb_s() != 0) {
    set_v_lb_s(from.v_lb_s());
  }
  if (from.v_lb_l() != 0) {
    set_v_lb_l(from.v_lb_l());
  }
  if (from.v_ub_s() != 0) {
    set_v_ub_s(from.v_ub_s());
  }
  if (from.v_ub_l() != 0) {
    set_v_ub_l(from.v_ub_l());
  }
  if (from.a_lb_s() != 0) {
    set_a_lb_s(from.a_lb_s());
  }
  if (from.a_lb_l() != 0) {
    set_a_lb_l(from.a_lb_l());
  }
  if (from.a_ub_s() != 0) {
    set_a_ub_s(from.a_ub_s());
  }
  if (from.a_ub_l() != 0) {
    set_a_ub_l(from.a_ub_l());
  }
}

void CubeConfig::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:planning.umbp.CubeConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CubeConfig::CopyFrom(const CubeConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:planning.umbp.CubeConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CubeConfig::IsInitialized() const {
  return true;
}

void CubeConfig::Swap(CubeConfig* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CubeConfig::InternalSwap(CubeConfig* other) {
  using std::swap;
  swap(v_lb_s_, other->v_lb_s_);
  swap(v_lb_l_, other->v_lb_l_);
  swap(v_ub_s_, other->v_ub_s_);
  swap(v_ub_l_, other->v_ub_l_);
  swap(a_lb_s_, other->a_lb_s_);
  swap(a_lb_l_, other->a_lb_l_);
  swap(a_ub_s_, other->a_ub_s_);
  swap(a_ub_l_, other->a_ub_l_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CubeConfig::GetMetadata() const {
  protobuf_umbp_5fconfig_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_umbp_5fconfig_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CarConfig::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CarConfig::kCarWidthFieldNumber;
const int CarConfig::kCarLengthFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CarConfig::CarConfig()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_umbp_5fconfig_2eproto::scc_info_CarConfig.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:planning.umbp.CarConfig)
}
CarConfig::CarConfig(const CarConfig& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&car_width_, &from.car_width_,
    static_cast<size_t>(reinterpret_cast<char*>(&car_length_) -
    reinterpret_cast<char*>(&car_width_)) + sizeof(car_length_));
  // @@protoc_insertion_point(copy_constructor:planning.umbp.CarConfig)
}

void CarConfig::SharedCtor() {
  ::memset(&car_width_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&car_length_) -
      reinterpret_cast<char*>(&car_width_)) + sizeof(car_length_));
}

CarConfig::~CarConfig() {
  // @@protoc_insertion_point(destructor:planning.umbp.CarConfig)
  SharedDtor();
}

void CarConfig::SharedDtor() {
}

void CarConfig::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CarConfig::descriptor() {
  ::protobuf_umbp_5fconfig_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_umbp_5fconfig_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CarConfig& CarConfig::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_umbp_5fconfig_2eproto::scc_info_CarConfig.base);
  return *internal_default_instance();
}


void CarConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:planning.umbp.CarConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&car_width_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&car_length_) -
      reinterpret_cast<char*>(&car_width_)) + sizeof(car_length_));
  _internal_metadata_.Clear();
}

bool CarConfig::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:planning.umbp.CarConfig)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // double car_width = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &car_width_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double car_length = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u /* 17 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &car_length_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:planning.umbp.CarConfig)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:planning.umbp.CarConfig)
  return false;
#undef DO_
}

void CarConfig::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:planning.umbp.CarConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double car_width = 1;
  if (this->car_width() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->car_width(), output);
  }

  // double car_length = 2;
  if (this->car_length() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->car_length(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:planning.umbp.CarConfig)
}

::google::protobuf::uint8* CarConfig::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:planning.umbp.CarConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double car_width = 1;
  if (this->car_width() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(1, this->car_width(), target);
  }

  // double car_length = 2;
  if (this->car_length() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->car_length(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:planning.umbp.CarConfig)
  return target;
}

size_t CarConfig::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:planning.umbp.CarConfig)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // double car_width = 1;
  if (this->car_width() != 0) {
    total_size += 1 + 8;
  }

  // double car_length = 2;
  if (this->car_length() != 0) {
    total_size += 1 + 8;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CarConfig::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:planning.umbp.CarConfig)
  GOOGLE_DCHECK_NE(&from, this);
  const CarConfig* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CarConfig>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:planning.umbp.CarConfig)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:planning.umbp.CarConfig)
    MergeFrom(*source);
  }
}

void CarConfig::MergeFrom(const CarConfig& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:planning.umbp.CarConfig)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.car_width() != 0) {
    set_car_width(from.car_width());
  }
  if (from.car_length() != 0) {
    set_car_length(from.car_length());
  }
}

void CarConfig::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:planning.umbp.CarConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CarConfig::CopyFrom(const CarConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:planning.umbp.CarConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CarConfig::IsInitialized() const {
  return true;
}

void CarConfig::Swap(CarConfig* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CarConfig::InternalSwap(CarConfig* other) {
  using std::swap;
  swap(car_width_, other->car_width_);
  swap(car_length_, other->car_length_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CarConfig::GetMetadata() const {
  protobuf_umbp_5fconfig_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_umbp_5fconfig_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void MapConfig::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MapConfig::kReferenceSpeedFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MapConfig::MapConfig()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_umbp_5fconfig_2eproto::scc_info_MapConfig.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:planning.umbp.MapConfig)
}
MapConfig::MapConfig(const MapConfig& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  reference_speed_ = from.reference_speed_;
  // @@protoc_insertion_point(copy_constructor:planning.umbp.MapConfig)
}

void MapConfig::SharedCtor() {
  reference_speed_ = 0;
}

MapConfig::~MapConfig() {
  // @@protoc_insertion_point(destructor:planning.umbp.MapConfig)
  SharedDtor();
}

void MapConfig::SharedDtor() {
}

void MapConfig::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* MapConfig::descriptor() {
  ::protobuf_umbp_5fconfig_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_umbp_5fconfig_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MapConfig& MapConfig::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_umbp_5fconfig_2eproto::scc_info_MapConfig.base);
  return *internal_default_instance();
}


void MapConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:planning.umbp.MapConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  reference_speed_ = 0;
  _internal_metadata_.Clear();
}

bool MapConfig::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:planning.umbp.MapConfig)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // double reference_speed = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &reference_speed_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:planning.umbp.MapConfig)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:planning.umbp.MapConfig)
  return false;
#undef DO_
}

void MapConfig::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:planning.umbp.MapConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double reference_speed = 1;
  if (this->reference_speed() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->reference_speed(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:planning.umbp.MapConfig)
}

::google::protobuf::uint8* MapConfig::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:planning.umbp.MapConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double reference_speed = 1;
  if (this->reference_speed() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(1, this->reference_speed(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:planning.umbp.MapConfig)
  return target;
}

size_t MapConfig::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:planning.umbp.MapConfig)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // double reference_speed = 1;
  if (this->reference_speed() != 0) {
    total_size += 1 + 8;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MapConfig::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:planning.umbp.MapConfig)
  GOOGLE_DCHECK_NE(&from, this);
  const MapConfig* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MapConfig>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:planning.umbp.MapConfig)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:planning.umbp.MapConfig)
    MergeFrom(*source);
  }
}

void MapConfig::MergeFrom(const MapConfig& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:planning.umbp.MapConfig)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.reference_speed() != 0) {
    set_reference_speed(from.reference_speed());
  }
}

void MapConfig::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:planning.umbp.MapConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MapConfig::CopyFrom(const MapConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:planning.umbp.MapConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MapConfig::IsInitialized() const {
  return true;
}

void MapConfig::Swap(MapConfig* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MapConfig::InternalSwap(MapConfig* other) {
  using std::swap;
  swap(reference_speed_, other->reference_speed_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata MapConfig::GetMetadata() const {
  protobuf_umbp_5fconfig_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_umbp_5fconfig_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Config::InitAsDefaultInstance() {
  ::planning::umbp::_Config_default_instance_._instance.get_mutable()->cost_ = const_cast< ::planning::umbp::CostConfig*>(
      ::planning::umbp::CostConfig::internal_default_instance());
  ::planning::umbp::_Config_default_instance_._instance.get_mutable()->propogate_ = const_cast< ::planning::umbp::PropogateConfig*>(
      ::planning::umbp::PropogateConfig::internal_default_instance());
  ::planning::umbp::_Config_default_instance_._instance.get_mutable()->ego_ = const_cast< ::planning::umbp::EgoConfig*>(
      ::planning::umbp::EgoConfig::internal_default_instance());
  ::planning::umbp::_Config_default_instance_._instance.get_mutable()->bezier_ = const_cast< ::planning::umbp::BezierConfig*>(
      ::planning::umbp::BezierConfig::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Config::kNameFieldNumber;
const int Config::kVersionFieldNumber;
const int Config::kStatusFieldNumber;
const int Config::kCostFieldNumber;
const int Config::kPropogateFieldNumber;
const int Config::kEgoFieldNumber;
const int Config::kBezierFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Config::Config()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_umbp_5fconfig_2eproto::scc_info_Config.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:planning.umbp.Config)
}
Config::Config(const Config& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.version().size() > 0) {
    version_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.version_);
  }
  status_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.status().size() > 0) {
    status_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.status_);
  }
  if (from.has_cost()) {
    cost_ = new ::planning::umbp::CostConfig(*from.cost_);
  } else {
    cost_ = NULL;
  }
  if (from.has_propogate()) {
    propogate_ = new ::planning::umbp::PropogateConfig(*from.propogate_);
  } else {
    propogate_ = NULL;
  }
  if (from.has_ego()) {
    ego_ = new ::planning::umbp::EgoConfig(*from.ego_);
  } else {
    ego_ = NULL;
  }
  if (from.has_bezier()) {
    bezier_ = new ::planning::umbp::BezierConfig(*from.bezier_);
  } else {
    bezier_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:planning.umbp.Config)
}

void Config::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  status_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&cost_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&bezier_) -
      reinterpret_cast<char*>(&cost_)) + sizeof(bezier_));
}

Config::~Config() {
  // @@protoc_insertion_point(destructor:planning.umbp.Config)
  SharedDtor();
}

void Config::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  version_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  status_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete cost_;
  if (this != internal_default_instance()) delete propogate_;
  if (this != internal_default_instance()) delete ego_;
  if (this != internal_default_instance()) delete bezier_;
}

void Config::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Config::descriptor() {
  ::protobuf_umbp_5fconfig_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_umbp_5fconfig_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Config& Config::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_umbp_5fconfig_2eproto::scc_info_Config.base);
  return *internal_default_instance();
}


void Config::Clear() {
// @@protoc_insertion_point(message_clear_start:planning.umbp.Config)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  status_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && cost_ != NULL) {
    delete cost_;
  }
  cost_ = NULL;
  if (GetArenaNoVirtual() == NULL && propogate_ != NULL) {
    delete propogate_;
  }
  propogate_ = NULL;
  if (GetArenaNoVirtual() == NULL && ego_ != NULL) {
    delete ego_;
  }
  ego_ = NULL;
  if (GetArenaNoVirtual() == NULL && bezier_ != NULL) {
    delete bezier_;
  }
  bezier_ = NULL;
  _internal_metadata_.Clear();
}

bool Config::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:planning.umbp.Config)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "planning.umbp.Config.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string version = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_version()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->version().data(), static_cast<int>(this->version().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "planning.umbp.Config.version"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string status = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_status()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->status().data(), static_cast<int>(this->status().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "planning.umbp.Config.status"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .planning.umbp.CostConfig cost = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_cost()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .planning.umbp.PropogateConfig propogate = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_propogate()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .planning.umbp.EgoConfig ego = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_ego()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .planning.umbp.BezierConfig bezier = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_bezier()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:planning.umbp.Config)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:planning.umbp.Config)
  return false;
#undef DO_
}

void Config::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:planning.umbp.Config)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "planning.umbp.Config.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // string version = 2;
  if (this->version().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->version().data(), static_cast<int>(this->version().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "planning.umbp.Config.version");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->version(), output);
  }

  // string status = 3;
  if (this->status().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->status().data(), static_cast<int>(this->status().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "planning.umbp.Config.status");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->status(), output);
  }

  // .planning.umbp.CostConfig cost = 4;
  if (this->has_cost()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_cost(), output);
  }

  // .planning.umbp.PropogateConfig propogate = 5;
  if (this->has_propogate()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->_internal_propogate(), output);
  }

  // .planning.umbp.EgoConfig ego = 6;
  if (this->has_ego()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->_internal_ego(), output);
  }

  // .planning.umbp.BezierConfig bezier = 7;
  if (this->has_bezier()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->_internal_bezier(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:planning.umbp.Config)
}

::google::protobuf::uint8* Config::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:planning.umbp.Config)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "planning.umbp.Config.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // string version = 2;
  if (this->version().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->version().data(), static_cast<int>(this->version().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "planning.umbp.Config.version");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->version(), target);
  }

  // string status = 3;
  if (this->status().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->status().data(), static_cast<int>(this->status().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "planning.umbp.Config.status");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->status(), target);
  }

  // .planning.umbp.CostConfig cost = 4;
  if (this->has_cost()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_cost(), deterministic, target);
  }

  // .planning.umbp.PropogateConfig propogate = 5;
  if (this->has_propogate()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->_internal_propogate(), deterministic, target);
  }

  // .planning.umbp.EgoConfig ego = 6;
  if (this->has_ego()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, this->_internal_ego(), deterministic, target);
  }

  // .planning.umbp.BezierConfig bezier = 7;
  if (this->has_bezier()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        7, this->_internal_bezier(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:planning.umbp.Config)
  return target;
}

size_t Config::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:planning.umbp.Config)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // string version = 2;
  if (this->version().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->version());
  }

  // string status = 3;
  if (this->status().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->status());
  }

  // .planning.umbp.CostConfig cost = 4;
  if (this->has_cost()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *cost_);
  }

  // .planning.umbp.PropogateConfig propogate = 5;
  if (this->has_propogate()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *propogate_);
  }

  // .planning.umbp.EgoConfig ego = 6;
  if (this->has_ego()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *ego_);
  }

  // .planning.umbp.BezierConfig bezier = 7;
  if (this->has_bezier()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *bezier_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Config::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:planning.umbp.Config)
  GOOGLE_DCHECK_NE(&from, this);
  const Config* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Config>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:planning.umbp.Config)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:planning.umbp.Config)
    MergeFrom(*source);
  }
}

void Config::MergeFrom(const Config& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:planning.umbp.Config)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.version().size() > 0) {

    version_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.version_);
  }
  if (from.status().size() > 0) {

    status_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.status_);
  }
  if (from.has_cost()) {
    mutable_cost()->::planning::umbp::CostConfig::MergeFrom(from.cost());
  }
  if (from.has_propogate()) {
    mutable_propogate()->::planning::umbp::PropogateConfig::MergeFrom(from.propogate());
  }
  if (from.has_ego()) {
    mutable_ego()->::planning::umbp::EgoConfig::MergeFrom(from.ego());
  }
  if (from.has_bezier()) {
    mutable_bezier()->::planning::umbp::BezierConfig::MergeFrom(from.bezier());
  }
}

void Config::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:planning.umbp.Config)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Config::CopyFrom(const Config& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:planning.umbp.Config)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Config::IsInitialized() const {
  return true;
}

void Config::Swap(Config* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Config::InternalSwap(Config* other) {
  using std::swap;
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  version_.Swap(&other->version_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  status_.Swap(&other->status_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(cost_, other->cost_);
  swap(propogate_, other->propogate_);
  swap(ego_, other->ego_);
  swap(bezier_, other->bezier_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Config::GetMetadata() const {
  protobuf_umbp_5fconfig_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_umbp_5fconfig_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace umbp
}  // namespace planning
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::planning::umbp::EfficiencyCost* Arena::CreateMaybeMessage< ::planning::umbp::EfficiencyCost >(Arena* arena) {
  return Arena::CreateInternal< ::planning::umbp::EfficiencyCost >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::planning::umbp::SafetyCost* Arena::CreateMaybeMessage< ::planning::umbp::SafetyCost >(Arena* arena) {
  return Arena::CreateInternal< ::planning::umbp::SafetyCost >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::planning::umbp::UserCost* Arena::CreateMaybeMessage< ::planning::umbp::UserCost >(Arena* arena) {
  return Arena::CreateInternal< ::planning::umbp::UserCost >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::planning::umbp::NavigationCost* Arena::CreateMaybeMessage< ::planning::umbp::NavigationCost >(Arena* arena) {
  return Arena::CreateInternal< ::planning::umbp::NavigationCost >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::planning::umbp::HdiCost* Arena::CreateMaybeMessage< ::planning::umbp::HdiCost >(Arena* arena) {
  return Arena::CreateInternal< ::planning::umbp::HdiCost >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::planning::umbp::FpbConfig* Arena::CreateMaybeMessage< ::planning::umbp::FpbConfig >(Arena* arena) {
  return Arena::CreateInternal< ::planning::umbp::FpbConfig >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::planning::umbp::SampleConfig* Arena::CreateMaybeMessage< ::planning::umbp::SampleConfig >(Arena* arena) {
  return Arena::CreateInternal< ::planning::umbp::SampleConfig >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::planning::umbp::PropogateConfig* Arena::CreateMaybeMessage< ::planning::umbp::PropogateConfig >(Arena* arena) {
  return Arena::CreateInternal< ::planning::umbp::PropogateConfig >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::planning::umbp::CostConfig* Arena::CreateMaybeMessage< ::planning::umbp::CostConfig >(Arena* arena) {
  return Arena::CreateInternal< ::planning::umbp::CostConfig >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::planning::umbp::EgoConfig* Arena::CreateMaybeMessage< ::planning::umbp::EgoConfig >(Arena* arena) {
  return Arena::CreateInternal< ::planning::umbp::EgoConfig >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::planning::umbp::BezierConfig* Arena::CreateMaybeMessage< ::planning::umbp::BezierConfig >(Arena* arena) {
  return Arena::CreateInternal< ::planning::umbp::BezierConfig >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::planning::umbp::WeightConfig* Arena::CreateMaybeMessage< ::planning::umbp::WeightConfig >(Arena* arena) {
  return Arena::CreateInternal< ::planning::umbp::WeightConfig >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::planning::umbp::CubeConfig* Arena::CreateMaybeMessage< ::planning::umbp::CubeConfig >(Arena* arena) {
  return Arena::CreateInternal< ::planning::umbp::CubeConfig >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::planning::umbp::CarConfig* Arena::CreateMaybeMessage< ::planning::umbp::CarConfig >(Arena* arena) {
  return Arena::CreateInternal< ::planning::umbp::CarConfig >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::planning::umbp::MapConfig* Arena::CreateMaybeMessage< ::planning::umbp::MapConfig >(Arena* arena) {
  return Arena::CreateInternal< ::planning::umbp::MapConfig >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::planning::umbp::Config* Arena::CreateMaybeMessage< ::planning::umbp::Config >(Arena* arena) {
  return Arena::CreateInternal< ::planning::umbp::Config >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
